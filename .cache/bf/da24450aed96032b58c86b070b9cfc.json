{"id":"node_modules/@aws-amplify/analytics/lib/vendor/dom-utils/get-attributes.js","dependencies":[{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\analytics\\lib\\vendor\\dom-utils\\get-attributes.js.map","includedInParent":true,"mtime":1557861886000},{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\analytics\\src\\vendor\\dom-utils\\get-attributes.ts","includedInParent":true,"mtime":1557861738000},{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\analytics\\package.json","includedInParent":true,"mtime":1560308010598}],"generated":{"js":"\"use strict\";\n/**\n * Copyright (c) 2017, Philip Walton <philip@philipwalton.com>\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {!Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nfunction getAttributes(element) {\n    var attrs = {};\n    // Validate input.\n    if (!(element && element.nodeType === 1))\n        return attrs;\n    // Return an empty object if there are no attributes.\n    var map = element.attributes;\n    if (map.length === 0)\n        return {};\n    for (var i = 0, attr = void 0; attr = map[i]; i++) {\n        attrs[attr.name] = attr.value;\n    }\n    return attrs;\n}\nexports.default = getAttributes;\n"},"sourceMaps":{"js":{"version":3,"file":"get-attributes.js","sourceRoot":"","sources":["../../../src/vendor/dom-utils/get-attributes.ts"],"names":[],"mappings":";AAAA;;GAEG;;AAEH;;;;;;GAMG;AACH,uBAAsC,OAAO;IAC3C,IAAM,KAAK,GAAG,EAAE,CAAC;IAEjB,kBAAkB;IAClB,IAAI,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,QAAQ,KAAK,CAAC,CAAC;QAAE,OAAO,KAAK,CAAC;IAEvD,qDAAqD;IACrD,IAAM,GAAG,GAAG,OAAO,CAAC,UAAU,CAAC;IAC/B,IAAI,GAAG,CAAC,MAAM,KAAK,CAAC;QAAE,OAAO,EAAE,CAAC;IAEhC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,IAAI,SAAA,EAAE,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;QACxC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;KAC/B;IACD,OAAO,KAAK,CAAC;AACf,CAAC;AAdD,gCAcC","sourcesContent":["/**\n * Copyright (c) 2017, Philip Walton <philip@philipwalton.com>\n */\n\n/**\n * Gets all attributes of an element as a plain JavaScriot object.\n * @param {Element} element The element whose attributes to get.\n * @return {!Object} An object whose keys are the attribute keys and whose\n *     values are the attribute values. If no attributes exist, an empty\n *     object is returned.\n */\nexport default function getAttributes(element) {\n  const attrs = {};\n\n  // Validate input.\n  if (!(element && element.nodeType === 1)) return attrs;\n\n  // Return an empty object if there are no attributes.\n  const map = element.attributes;\n  if (map.length === 0) return {};\n\n  for (let i = 0, attr; attr = map[i]; i++) {\n    attrs[attr.name] = attr.value;\n  }\n  return attrs;\n}\n"]}},"error":null,"hash":"6eb3acc160ef2df2adecbde7cbe9eced","cacheData":{"env":{}}}