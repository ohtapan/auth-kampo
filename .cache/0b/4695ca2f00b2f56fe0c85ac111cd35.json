{"id":"node_modules/@aws-amplify/analytics/lib/vendor/dom-utils/dispatch.js","dependencies":[{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\analytics\\lib\\vendor\\dom-utils\\dispatch.js.map","includedInParent":true,"mtime":1557861886000},{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\analytics\\src\\vendor\\dom-utils\\dispatch.ts","includedInParent":true,"mtime":1557861738000},{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\analytics\\package.json","includedInParent":true,"mtime":1560308010598}],"generated":{"js":"\"use strict\";\n/**\n * Copyright (c) 2017, Philip Walton <philip@philipwalton.com>\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Dispatches an event on the passed element.\n * @param {!Element} element The DOM element to dispatch the event on.\n * @param {string} eventType The type of event to dispatch.\n * @param {Object|string=} eventName A string name of the event constructor\n *     to use. Defaults to 'Event' if nothing is passed or 'CustomEvent' if\n *     a value is set on `initDict.detail`. If eventName is given an object\n *     it is assumed to be initDict and thus reassigned.\n * @param {Object=} initDict The initialization attributes for the\n *     event. A `detail` property can be used here to pass custom data.\n * @return {boolean} The return value of `element.dispatchEvent`, which will\n *     be false if any of the event listeners called `preventDefault`.\n */\nfunction dispatch(element, eventType, evtName, init_dict) {\n    if (evtName === void 0) { evtName = 'Event'; }\n    if (init_dict === void 0) { init_dict = {}; }\n    var event;\n    var isCustom;\n    var initDict = init_dict;\n    var eventName = evtName;\n    // eventName is optional\n    if (typeof eventName === 'object') {\n        initDict = eventName;\n        eventName = 'Event';\n    }\n    initDict['bubbles'] = initDict['bubbles'] || false;\n    initDict['cancelable'] = initDict['cancelable'] || false;\n    initDict['composed'] = initDict['composed'] || false;\n    // If a detail property is passed, this is a custom event.\n    if ('detail' in initDict)\n        isCustom = true;\n    eventName = isCustom ? 'CustomEvent' : eventName;\n    // Tries to create the event using constructors, if that doesn't work,\n    // fallback to `document.createEvent()`.\n    try {\n        event = new window[eventName](eventType, initDict);\n    }\n    catch (err) {\n        event = document.createEvent(eventName);\n        var initMethod = 'init' + (isCustom ? 'Custom' : '') + 'Event';\n        event[initMethod](eventType, initDict['bubbles'], initDict['cancelable'], initDict['detail']);\n    }\n    return element.dispatchEvent(event);\n}\nexports.default = dispatch;\n"},"sourceMaps":{"js":{"version":3,"file":"dispatch.js","sourceRoot":"","sources":["../../../src/vendor/dom-utils/dispatch.ts"],"names":[],"mappings":";AAAA;;GAEG;;AAEH;;;;;;;;;;;;GAYG;AACH,kBACI,OAAO,EAAE,SAAS,EAAE,OAAiB,EAAE,SAAc;IAAjC,wBAAA,EAAA,iBAAiB;IAAE,0BAAA,EAAA,cAAc;IACvD,IAAI,KAAK,CAAC;IACV,IAAI,QAAQ,CAAC;IACb,IAAI,QAAQ,GAAG,SAAS,CAAC;IACzB,IAAI,SAAS,GAAG,OAAO,CAAC;IAExB,wBAAwB;IACxB,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;QACjC,QAAQ,GAAG,SAAS,CAAC;QACrB,SAAS,GAAG,OAAO,CAAC;KACrB;IAED,QAAQ,CAAC,SAAS,CAAC,GAAG,QAAQ,CAAC,SAAS,CAAC,IAAI,KAAK,CAAC;IACnD,QAAQ,CAAC,YAAY,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,IAAI,KAAK,CAAC;IACzD,QAAQ,CAAC,UAAU,CAAC,GAAG,QAAQ,CAAC,UAAU,CAAC,IAAI,KAAK,CAAC;IAErD,0DAA0D;IAC1D,IAAI,QAAQ,IAAI,QAAQ;QAAE,QAAQ,GAAG,IAAI,CAAC;IAC1C,SAAS,GAAG,QAAQ,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC;IAEjD,sEAAsE;IACtE,wCAAwC;IACxC,IAAI;QACF,KAAK,GAAG,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;KACpD;IAAC,OAAM,GAAG,EAAE;QACX,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC;QACxC,IAAM,UAAU,GAAG,MAAM,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC;QACjE,KAAK,CAAC,UAAU,CAAC,CAAC,SAAS,EAAE,QAAQ,CAAC,SAAS,CAAC,EAC9B,QAAQ,CAAC,YAAY,CAAC,EAAE,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;KAC/D;IAED,OAAO,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;AACtC,CAAC;AAjCD,2BAiCC","sourcesContent":["/**\n * Copyright (c) 2017, Philip Walton <philip@philipwalton.com>\n */\n\n/**\n * Dispatches an event on the passed element.\n * @param {!Element} element The DOM element to dispatch the event on.\n * @param {string} eventType The type of event to dispatch.\n * @param {Object|string=} eventName A string name of the event constructor\n *     to use. Defaults to 'Event' if nothing is passed or 'CustomEvent' if\n *     a value is set on `initDict.detail`. If eventName is given an object\n *     it is assumed to be initDict and thus reassigned.\n * @param {Object=} initDict The initialization attributes for the\n *     event. A `detail` property can be used here to pass custom data.\n * @return {boolean} The return value of `element.dispatchEvent`, which will\n *     be false if any of the event listeners called `preventDefault`.\n */\nexport default function dispatch(\n    element, eventType, evtName = 'Event', init_dict = {}) {\n  let event;\n  let isCustom;\n  let initDict = init_dict;\n  let eventName = evtName;\n  \n  // eventName is optional\n  if (typeof eventName === 'object') {\n    initDict = eventName;\n    eventName = 'Event';\n  }\n\n  initDict['bubbles'] = initDict['bubbles'] || false;\n  initDict['cancelable'] = initDict['cancelable'] || false;\n  initDict['composed'] = initDict['composed'] || false;\n\n  // If a detail property is passed, this is a custom event.\n  if ('detail' in initDict) isCustom = true;\n  eventName = isCustom ? 'CustomEvent' : eventName;\n\n  // Tries to create the event using constructors, if that doesn't work,\n  // fallback to `document.createEvent()`.\n  try {\n    event = new window[eventName](eventType, initDict);\n  } catch(err) {\n    event = document.createEvent(eventName);\n    const initMethod = 'init' + (isCustom ? 'Custom' : '') + 'Event';\n    event[initMethod](eventType, initDict['bubbles'],\n                      initDict['cancelable'], initDict['detail']);\n  }\n\n  return element.dispatchEvent(event);\n}\n"]}},"error":null,"hash":"a89f7fa00a49a50dfdfd7fa6d2903768","cacheData":{"env":{}}}