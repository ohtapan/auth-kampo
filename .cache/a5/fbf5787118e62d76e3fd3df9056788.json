{"id":"node_modules/@aws-amplify/analytics/lib/vendor/dom-utils/parse-url.js","dependencies":[{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\analytics\\lib\\vendor\\dom-utils\\parse-url.js.map","includedInParent":true,"mtime":1557861886000},{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\analytics\\src\\vendor\\dom-utils\\parse-url.ts","includedInParent":true,"mtime":1557861738000},{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\analytics\\package.json","includedInParent":true,"mtime":1560308010598},{"name":"@aws-amplify/core","loc":{"line":6,"column":21},"parent":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\analytics\\lib\\vendor\\dom-utils\\parse-url.js","resolved":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\core\\lib\\index.js"}],"generated":{"js":"\"use strict\";\n/**\n * Copyright (c) 2017, Philip Walton <philip@philipwalton.com>\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@aws-amplify/core\");\nvar HTTP_PORT = '80';\nvar HTTPS_PORT = '443';\nvar DEFAULT_PORT = RegExp(':(' + HTTP_PORT + '|' + HTTPS_PORT + ')$');\nvar a = core_1.JS.browserOrNode().isBrowser ? document.createElement('a') : null;\nvar cache = {};\n/**\n * Parses the given url and returns an object mimicing a `Location` object.\n * @param {string} url The url to parse.\n * @return {!Object} An object with the same properties as a `Location`.\n */\nfunction parseUrl(u) {\n    var url = u;\n    // All falsy values (as well as \".\") should map to the current URL.\n    url = (!url || url === '.') ? location.href : url;\n    if (cache[url])\n        return cache[url];\n    a.href = url;\n    // When parsing file relative paths (e.g. `../index.html`), IE will correctly\n    // resolve the `href` property but will keep the `..` in the `path` property.\n    // It will also not include the `host` or `hostname` properties. Furthermore,\n    // IE will sometimes return no protocol or just a colon, especially for things\n    // like relative protocol URLs (e.g. \"//google.com\").\n    // To workaround all of these issues, we reparse with the full URL from the\n    // `href` property.\n    if (url.charAt(0) === '.' || url.charAt(0) === '/')\n        return parseUrl(a.href);\n    // Don't include default ports.\n    var port = (a.port === HTTP_PORT || a.port === HTTPS_PORT) ? '' : a.port;\n    // PhantomJS sets the port to \"0\" when using the file: protocol.\n    port = port === '0' ? '' : port;\n    // Sometimes IE incorrectly includes a port for default ports\n    // (e.g. `:80` or `:443`) even when no port is specified in the URL.\n    // http://bit.ly/1rQNoMg\n    var host = a.host.replace(DEFAULT_PORT, '');\n    // Not all browser support `origin` so we have to build it.\n    var origin = a['origin'] ? a['origin'] : a.protocol + '//' + host;\n    // Sometimes IE doesn't include the leading slash for pathname.\n    // http://bit.ly/1rQNoMg\n    var pathname = a.pathname.charAt(0) === '/' ? a.pathname : '/' + a.pathname;\n    return cache[url] = {\n        hash: a.hash,\n        host: host,\n        hostname: a.hostname,\n        href: a.href,\n        origin: origin,\n        pathname: pathname,\n        port: port,\n        protocol: a.protocol,\n        search: a.search,\n    };\n}\nexports.default = parseUrl;\n"},"sourceMaps":{"js":{"version":3,"file":"parse-url.js","sourceRoot":"","sources":["../../../src/vendor/dom-utils/parse-url.ts"],"names":[],"mappings":";AAAA;;GAEG;;AAEH,0CAAuC;AAEvC,IAAM,SAAS,GAAG,IAAI,CAAC;AACvB,IAAM,UAAU,GAAG,KAAK,CAAC;AACzB,IAAM,YAAY,GAAG,MAAM,CAAC,IAAI,GAAG,SAAS,GAAG,GAAG,GAAG,UAAU,GAAG,IAAI,CAAC,CAAC;AAExE,IAAM,CAAC,GAAG,SAAE,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AAC5E,IAAM,KAAK,GAAG,EAAE,CAAC;AAEjB;;;;GAIG;AACH,kBAAiC,CAAC;IAChC,IAAI,GAAG,GAAG,CAAC,CAAC;IACZ,mEAAmE;IACnE,GAAG,GAAG,CAAC,CAAC,GAAG,IAAI,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC;IAElD,IAAI,KAAK,CAAC,GAAG,CAAC;QAAE,OAAO,KAAK,CAAC,GAAG,CAAC,CAAC;IAElC,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC;IAEb,6EAA6E;IAC7E,6EAA6E;IAC7E,6EAA6E;IAC7E,8EAA8E;IAC9E,qDAAqD;IACrD,2EAA2E;IAC3E,mBAAmB;IACnB,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG;QAAE,OAAO,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAE5E,+BAA+B;IAC/B,IAAI,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,KAAK,SAAS,IAAI,CAAC,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAEzE,gEAAgE;IAChE,IAAI,GAAG,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;IAEhC,6DAA6D;IAC7D,oEAAoE;IACpE,wBAAwB;IACxB,IAAM,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;IAE9C,2DAA2D;IAC3D,IAAM,MAAM,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,GAAG,IAAI,GAAG,IAAI,CAAC;IAEpE,+DAA+D;IAC/D,wBAAwB;IACxB,IAAM,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC;IAE9E,OAAO,KAAK,CAAC,GAAG,CAAC,GAAG;QAClB,IAAI,EAAE,CAAC,CAAC,IAAI;QACZ,IAAI,MAAA;QACJ,QAAQ,EAAE,CAAC,CAAC,QAAQ;QACpB,IAAI,EAAE,CAAC,CAAC,IAAI;QACZ,MAAM,QAAA;QACN,QAAQ,UAAA;QACR,IAAI,MAAA;QACJ,QAAQ,EAAE,CAAC,CAAC,QAAQ;QACpB,MAAM,EAAE,CAAC,CAAC,MAAM;KACjB,CAAC;AACJ,CAAC;AA/CD,2BA+CC","sourcesContent":["/**\n * Copyright (c) 2017, Philip Walton <philip@philipwalton.com>\n */\n\nimport { JS } from '@aws-amplify/core';\n\nconst HTTP_PORT = '80';\nconst HTTPS_PORT = '443';\nconst DEFAULT_PORT = RegExp(':(' + HTTP_PORT + '|' + HTTPS_PORT + ')$');\n\nconst a = JS.browserOrNode().isBrowser ? document.createElement('a') : null;\nconst cache = {};\n\n/**\n * Parses the given url and returns an object mimicing a `Location` object.\n * @param {string} url The url to parse.\n * @return {!Object} An object with the same properties as a `Location`.\n */\nexport default function parseUrl(u) {\n  let url = u;\n  // All falsy values (as well as \".\") should map to the current URL.\n  url = (!url || url === '.') ? location.href : url;\n\n  if (cache[url]) return cache[url];\n\n  a.href = url;\n\n  // When parsing file relative paths (e.g. `../index.html`), IE will correctly\n  // resolve the `href` property but will keep the `..` in the `path` property.\n  // It will also not include the `host` or `hostname` properties. Furthermore,\n  // IE will sometimes return no protocol or just a colon, especially for things\n  // like relative protocol URLs (e.g. \"//google.com\").\n  // To workaround all of these issues, we reparse with the full URL from the\n  // `href` property.\n  if (url.charAt(0) === '.' || url.charAt(0) === '/') return parseUrl(a.href);\n\n  // Don't include default ports.\n  let port = (a.port === HTTP_PORT || a.port === HTTPS_PORT) ? '' : a.port;\n\n  // PhantomJS sets the port to \"0\" when using the file: protocol.\n  port = port === '0' ? '' : port;\n\n  // Sometimes IE incorrectly includes a port for default ports\n  // (e.g. `:80` or `:443`) even when no port is specified in the URL.\n  // http://bit.ly/1rQNoMg\n  const host = a.host.replace(DEFAULT_PORT, '');\n\n  // Not all browser support `origin` so we have to build it.\n  const origin = a['origin'] ? a['origin'] : a.protocol + '//' + host;\n\n  // Sometimes IE doesn't include the leading slash for pathname.\n  // http://bit.ly/1rQNoMg\n  const pathname = a.pathname.charAt(0) === '/' ? a.pathname : '/' + a.pathname;\n\n  return cache[url] = {\n    hash: a.hash,\n    host,\n    hostname: a.hostname,\n    href: a.href,\n    origin,\n    pathname,\n    port,\n    protocol: a.protocol,\n    search: a.search,\n  };\n}\n"]}},"error":null,"hash":"2679394d921b5d48aa4fe0b949f77503","cacheData":{"env":{}}}