{"id":"node_modules/@aws-amplify/pubsub/lib/PubSub.js","dependencies":[{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\pubsub\\lib\\PubSub.js.map","includedInParent":true,"mtime":1557861850000},{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\pubsub\\src\\PubSub.ts","includedInParent":true,"mtime":1557861739000},{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\pubsub\\package.json","includedInParent":true,"mtime":1560308010595},{"name":"zen-observable","loc":{"line":51,"column":25},"parent":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\pubsub\\lib\\PubSub.js","resolved":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\zen-observable\\index.js"},{"name":"@aws-amplify/core","loc":{"line":52,"column":21},"parent":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\pubsub\\lib\\PubSub.js","resolved":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\core\\lib\\index.js"},{"name":"@aws-amplify/core/lib/constants","loc":{"line":53,"column":26},"parent":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\pubsub\\lib\\PubSub.js","resolved":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\core\\lib\\constants.js"},{"name":"./Providers","loc":{"line":54,"column":26},"parent":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\pubsub\\lib\\PubSub.js","resolved":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\pubsub\\lib\\Providers\\index.js"}],"generated":{"js":"\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// import '../Common/Polyfills';\nvar Observable = require(\"zen-observable\");\nvar core_1 = require(\"@aws-amplify/core\");\nvar constants_1 = require(\"@aws-amplify/core/lib/constants\");\nvar Providers_1 = require(\"./Providers\");\nvar logger = new core_1.ConsoleLogger('PubSub');\nvar PubSub = /** @class */ (function () {\n    /**\n     * Initialize PubSub with AWS configurations\n     *\n     * @param {PubSubOptions} options - Configuration object for PubSub\n     */\n    function PubSub(options) {\n        this._options = options;\n        logger.debug('PubSub Options', this._options);\n        this._pluggables = [];\n        this.subscribe = this.subscribe.bind(this);\n    }\n    Object.defineProperty(PubSub.prototype, \"awsAppSyncProvider\", {\n        /**\n         * Lazy instantiate awsAppSyncProvider when it is required by the API category\n         */\n        get: function () {\n            if (!this._awsAppSyncProvider) {\n                this._awsAppSyncProvider = new Providers_1.AWSAppSyncProvider();\n            }\n            return this._awsAppSyncProvider;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    PubSub.prototype.getModuleName = function () {\n        return 'PubSub';\n    };\n    /**\n     * Configure PubSub part with configurations\n     *\n     * @param {PubSubOptions} config - Configuration for PubSub\n     * @return {Object} - The current configuration\n     */\n    PubSub.prototype.configure = function (options) {\n        var _this = this;\n        var opt = options ? options.PubSub || options : {};\n        logger.debug('configure PubSub', { opt: opt });\n        this._options = Object.assign({}, this._options, opt);\n        this._pluggables.map(function (pluggable) { return pluggable.configure(_this._options); });\n        return this._options;\n    };\n    /**\n     * add plugin into Analytics category\n     * @param {Object} pluggable - an instance of the plugin\n     */\n    PubSub.prototype.addPluggable = function (pluggable) {\n        return __awaiter(this, void 0, void 0, function () {\n            var config;\n            return __generator(this, function (_a) {\n                if (pluggable && pluggable.getCategory() === 'PubSub') {\n                    this._pluggables.push(pluggable);\n                    config = pluggable.configure(this._options);\n                    return [2 /*return*/, config];\n                }\n                return [2 /*return*/];\n            });\n        });\n    };\n    PubSub.prototype.getProviderByName = function (providerName) {\n        if (providerName === constants_1.INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER) {\n            return this.awsAppSyncProvider;\n        }\n        return this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === providerName; });\n    };\n    PubSub.prototype.getProviders = function (options) {\n        if (options === void 0) { options = {}; }\n        var providerName = options.provider;\n        if (!providerName) {\n            return this._pluggables;\n        }\n        var provider = this.getProviderByName(providerName);\n        if (!provider) {\n            throw new Error(\"Could not find provider named \" + providerName);\n        }\n        return [provider];\n    };\n    PubSub.prototype.publish = function (topics, msg, options) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                return [2 /*return*/, this.getProviders(options).map(function (provider) { return provider.publish(topics, msg, options); })];\n            });\n        });\n    };\n    PubSub.prototype.subscribe = function (topics, options) {\n        logger.debug('subscribe options', options);\n        var providers = this.getProviders(options);\n        return new Observable(function (observer) {\n            var observables = providers.map(function (provider) { return ({\n                provider: provider,\n                observable: provider.subscribe(topics, options),\n            }); });\n            var subscriptions = observables.map(function (_a) {\n                var provider = _a.provider, observable = _a.observable;\n                return observable.subscribe({\n                    start: console.error,\n                    next: function (value) { return observer.next({ provider: provider, value: value }); },\n                    error: function (error) { return observer.error({ provider: provider, error: error }); },\n                });\n            });\n            return function () { return subscriptions.forEach(function (subscription) { return subscription.unsubscribe(); }); };\n        });\n    };\n    return PubSub;\n}());\nexports.default = PubSub;\n"},"sourceMaps":{"js":{"version":3,"file":"PubSub.js","sourceRoot":"","sources":["../src/PubSub.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// import '../Common/Polyfills';\nimport * as Observable from 'zen-observable';\n\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER } from '@aws-amplify/core/lib/constants';\nimport { PubSubProvider, PubSubOptions, ProvidertOptions } from './types';\nimport { AWSAppSyncProvider } from './Providers';\n\nconst logger = new Logger('PubSub');\n\nexport default class PubSub {\n\n    private _options: PubSubOptions;\n\n    private _pluggables: PubSubProvider[];\n\n    /**\n     * Internal instance of AWSAppSyncProvider used by the API category to subscribe to AppSync\n     */\n    private _awsAppSyncProvider: AWSAppSyncProvider;\n\n    /**\n     * Lazy instantiate awsAppSyncProvider when it is required by the API category\n     */\n    private get awsAppSyncProvider() {\n        if (!this._awsAppSyncProvider) {\n            this._awsAppSyncProvider = new AWSAppSyncProvider();\n        }\n        return this._awsAppSyncProvider;\n    }\n\n    /**\n     * Initialize PubSub with AWS configurations\n     * \n     * @param {PubSubOptions} options - Configuration object for PubSub\n     */\n    constructor(options: PubSubOptions) {\n        this._options = options;\n        logger.debug('PubSub Options', this._options);\n        this._pluggables = [];\n        this.subscribe = this.subscribe.bind(this);\n    }\n\n    public getModuleName() {\n        return 'PubSub';\n    }\n\n    /**\n     * Configure PubSub part with configurations\n     * \n     * @param {PubSubOptions} config - Configuration for PubSub\n     * @return {Object} - The current configuration\n     */\n    configure(options: PubSubOptions) {\n        const opt = options ? options.PubSub || options : {};\n        logger.debug('configure PubSub', { opt });\n\n        this._options = Object.assign({}, this._options, opt);\n\n        this._pluggables.map((pluggable) => pluggable.configure(this._options));\n\n        return this._options;\n    }\n\n    /**\n     * add plugin into Analytics category\n     * @param {Object} pluggable - an instance of the plugin\n     */\n    public async addPluggable(pluggable: PubSubProvider) {\n        if (pluggable && pluggable.getCategory() === 'PubSub') {\n            this._pluggables.push(pluggable);\n\n            const config = pluggable.configure(this._options);\n\n            return config;\n        }\n    }\n\n    private getProviderByName(providerName) {\n        if (providerName === INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER) {\n            return this.awsAppSyncProvider;\n        }\n\n        return this._pluggables.find(pluggable => pluggable.getProviderName() === providerName);\n    }\n\n    private getProviders(options: ProvidertOptions = {}) {\n        const { provider: providerName } = options;\n        if (!providerName) {\n            return this._pluggables;\n        }\n\n        const provider = this.getProviderByName(providerName);\n        if (!provider) {\n            throw new Error(`Could not find provider named ${providerName}`);\n        }\n\n        return [provider];\n    }\n\n    async publish(topics: string[] | string, msg: any, options?: ProvidertOptions) {\n        return this.getProviders(options).map(provider => provider.publish(topics, msg, options));\n    }\n\n    subscribe(topics: string[] | string, options?: ProvidertOptions): Observable<any> {\n        logger.debug('subscribe options', options);\n\n        const providers = this.getProviders(options);\n\n        return new Observable(observer => {\n            const observables = providers.map(provider => ({\n                provider,\n                observable: provider.subscribe(topics, options),\n            }));\n\n            const subscriptions = observables.map(({ provider, observable }) => observable.subscribe({\n                start: console.error,\n                next: value => observer.next({ provider, value }),\n                error: error => observer.error({ provider, error }),\n                // complete: observer.complete, // TODO: when all completed, complete the outer one\n            }));\n\n            return () => subscriptions.forEach(subscription => subscription.unsubscribe());\n        });\n    }\n}\n"]}},"error":null,"hash":"43f71ac1358ec44faebf95d8d1e57e10","cacheData":{"env":{}}}