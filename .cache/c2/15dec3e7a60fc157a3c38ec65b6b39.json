{"id":"node_modules/@aws-amplify/analytics/lib/Providers/AWSKinesisProvider.js","dependencies":[{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\analytics\\lib\\Providers\\AWSKinesisProvider.js.map","includedInParent":true,"mtime":1557861886000},{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\analytics\\src\\Providers\\AWSKinesisProvider.ts","includedInParent":true,"mtime":1557861738000},{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\analytics\\package.json","includedInParent":true,"mtime":1560308010598},{"name":"@aws-amplify/core","loc":{"line":50,"column":21},"parent":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\analytics\\lib\\Providers\\AWSKinesisProvider.js","resolved":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\core\\lib\\index.js"},{"name":"aws-sdk/clients/kinesis","loc":{"line":51,"column":22},"parent":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\analytics\\lib\\Providers\\AWSKinesisProvider.js","resolved":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\aws-sdk\\clients\\kinesis.js"}],"generated":{"js":"\"use strict\";\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@aws-amplify/core\");\nvar Kinesis = require(\"aws-sdk/clients/kinesis\");\nvar logger = new core_1.ConsoleLogger('AWSKineisProvider');\n// events buffer\nvar BUFFER_SIZE = 1000;\nvar FLUSH_SIZE = 100;\nvar FLUSH_INTERVAL = 5 * 1000; // 5s\nvar RESEND_LIMIT = 5;\nvar AWSKinesisProvider = /** @class */ (function () {\n    function AWSKinesisProvider(config) {\n        this._buffer = [];\n        this._config = config ? config : {};\n        this._config.bufferSize = this._config.bufferSize || BUFFER_SIZE;\n        this._config.flushSize = this._config.flushSize || FLUSH_SIZE;\n        this._config.flushInterval = this._config.flushInterval || FLUSH_INTERVAL;\n        this._config.resendLimit = this._config.resendLimit || RESEND_LIMIT;\n        // events batch\n        var that = this;\n        // flush event buffer\n        this._setupTimer();\n    }\n    AWSKinesisProvider.prototype._setupTimer = function () {\n        var _this = this;\n        if (this._timer) {\n            clearInterval(this._timer);\n        }\n        var _a = this._config, flushSize = _a.flushSize, flushInterval = _a.flushInterval;\n        var that = this;\n        this._timer = setInterval(function () {\n            var size = _this._buffer.length < flushSize ? _this._buffer.length : flushSize;\n            var events = [];\n            for (var i = 0; i < size; i += 1) {\n                var params = _this._buffer.shift();\n                events.push(params);\n            }\n            that._sendFromBuffer(events);\n        }, flushInterval);\n    };\n    /**\n     * get the category of the plugin\n     */\n    AWSKinesisProvider.prototype.getCategory = function () {\n        return 'Analytics';\n    };\n    /**\n     * get provider name of the plugin\n     */\n    AWSKinesisProvider.prototype.getProviderName = function () {\n        return 'AWSKinesis';\n    };\n    /**\n     * configure the plugin\n     * @param {Object} config - configuration\n     */\n    AWSKinesisProvider.prototype.configure = function (config) {\n        logger.debug('configure Analytics', config);\n        var conf = config ? config : {};\n        this._config = Object.assign({}, this._config, conf);\n        this._setupTimer();\n        return this._config;\n    };\n    /**\n     * record an event\n     * @param {Object} params - the params of an event\n     */\n    AWSKinesisProvider.prototype.record = function (params) {\n        return __awaiter(this, void 0, void 0, function () {\n            var credentials;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this._getCredentials()];\n                    case 1:\n                        credentials = _a.sent();\n                        if (!credentials)\n                            return [2 /*return*/, Promise.resolve(false)];\n                        Object.assign(params, { config: this._config, credentials: credentials });\n                        return [2 /*return*/, this._putToBuffer(params)];\n                }\n            });\n        });\n    };\n    AWSKinesisProvider.prototype.updateEndpoint = function (params) {\n        logger.debug('updateEndpoint is not implemented in Kinesis provider');\n        return Promise.resolve(true);\n    };\n    /**\n     * @private\n     * @param params - params for the event recording\n     * Put events into buffer\n     */\n    AWSKinesisProvider.prototype._putToBuffer = function (params) {\n        if (this._buffer.length < BUFFER_SIZE) {\n            this._buffer.push(params);\n            return Promise.resolve(true);\n        }\n        else {\n            logger.debug('exceed analytics events buffer size');\n            return Promise.reject(false);\n        }\n    };\n    AWSKinesisProvider.prototype._sendFromBuffer = function (events) {\n        var _this = this;\n        // collapse events by credentials\n        // events = [ {params} ]\n        var eventsGroups = [];\n        var preCred = null;\n        var group = [];\n        for (var i = 0; i < events.length; i += 1) {\n            var cred = events[i].credentials;\n            if (i === 0) {\n                group.push(events[i]);\n                preCred = cred;\n            }\n            else {\n                if (cred.sessionToken === preCred.sessionToken && cred.identityId === preCred.identityId) {\n                    logger.debug('no change for cred, put event in the same group');\n                    group.push(events[i]);\n                }\n                else {\n                    eventsGroups.push(group);\n                    group = [];\n                    group.push(events[i]);\n                    preCred = cred;\n                }\n            }\n        }\n        eventsGroups.push(group);\n        eventsGroups.map(function (evts) {\n            _this._sendEvents(evts);\n        });\n    };\n    AWSKinesisProvider.prototype._sendEvents = function (group) {\n        var _this = this;\n        if (group.length === 0) {\n            // logger.debug('events array is empty, directly return');\n            return;\n        }\n        var _a = group[0], config = _a.config, credentials = _a.credentials;\n        var initClients = this._init(config, credentials);\n        if (!initClients)\n            return false;\n        var records = {};\n        group.map(function (params) {\n            // spit by streamName\n            var evt = params.event;\n            var streamName = evt.streamName;\n            if (records[streamName] === undefined) {\n                records[streamName] = [];\n            }\n            var Data = JSON.stringify(evt.data);\n            var PartitionKey = evt.partitionKey || ('partition-' + credentials.identityId);\n            var record = { Data: Data, PartitionKey: PartitionKey };\n            records[streamName].push(record);\n        });\n        Object.keys(records).map(function (streamName) {\n            logger.debug('putting records to kinesis with records', records[streamName]);\n            _this._kinesis.putRecords({\n                Records: records[streamName],\n                StreamName: streamName\n            }, function (err, data) {\n                if (err)\n                    logger.debug('Failed to upload records to Kinesis', err);\n                else\n                    logger.debug('Upload records to stream', streamName);\n            });\n        });\n    };\n    AWSKinesisProvider.prototype._init = function (config, credentials) {\n        logger.debug('init clients');\n        if (this._kinesis\n            && this._config.credentials\n            && this._config.credentials.sessionToken === credentials.sessionToken\n            && this._config.credentials.identityId === credentials.identityId) {\n            logger.debug('no change for analytics config, directly return from init');\n            return true;\n        }\n        this._config.credentials = credentials;\n        var region = config.region;\n        logger.debug('initialize kinesis with credentials', credentials);\n        this._kinesis = new Kinesis({\n            apiVersion: '2013-12-02',\n            region: region,\n            credentials: credentials\n        });\n        return true;\n    };\n    /**\n     * @private\n     * check if current credentials exists\n     */\n    AWSKinesisProvider.prototype._getCredentials = function () {\n        var that = this;\n        return core_1.Credentials.get()\n            .then(function (credentials) {\n            if (!credentials)\n                return null;\n            logger.debug('set credentials for analytics', that._config.credentials);\n            return core_1.Credentials.shear(credentials);\n        })\n            .catch(function (err) {\n            logger.debug('ensure credentials error', err);\n            return null;\n        });\n    };\n    return AWSKinesisProvider;\n}());\nexports.default = AWSKinesisProvider;\n"},"sourceMaps":{"js":{"version":3,"file":"AWSKinesisProvider.js","sourceRoot":"","sources":["../../src/Providers/AWSKinesisProvider.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { ConsoleLogger as Logger, Credentials} from '@aws-amplify/core';\nimport * as Kinesis from 'aws-sdk/clients/kinesis';\nimport Cache from '@aws-amplify/cache';\nimport { AnalyticsProvider } from '../types';\n\nconst logger = new Logger('AWSKineisProvider');\n\n// events buffer\nconst BUFFER_SIZE = 1000;\nconst FLUSH_SIZE = 100;\nconst FLUSH_INTERVAL = 5*1000; // 5s\nconst RESEND_LIMIT = 5;\n\nexport default class AWSKinesisProvider implements AnalyticsProvider {\n\n    private _config;\n    private _kinesis;\n    private _buffer;\n    private _timer;\n\n    constructor(config?) {\n        this._buffer = [];\n        this._config = config? config : {};\n        this._config.bufferSize = this._config.bufferSize || BUFFER_SIZE;\n        this._config.flushSize = this._config.flushSize || FLUSH_SIZE;\n        this._config.flushInterval = this._config.flushInterval || FLUSH_INTERVAL;\n        this._config.resendLimit = this._config.resendLimit || RESEND_LIMIT;\n\n        // events batch\n        const that = this;\n\n         // flush event buffer\n        this._setupTimer();\n    }\n\n    private _setupTimer() {\n        if (this._timer) {\n            clearInterval(this._timer);\n        }\n        const { flushSize, flushInterval } = this._config;\n        const that = this;\n        this._timer = setInterval(\n            () => {\n                const size = this._buffer.length <  flushSize? this._buffer.length : flushSize;\n                const events = [];\n                for (let i = 0; i < size; i += 1) {\n                    const params = this._buffer.shift();\n                    events.push(params);\n                } \n                that._sendFromBuffer(events);\n            },\n            flushInterval\n        );\n    }\n\n    /**\n     * get the category of the plugin\n     */\n    public getCategory(): string {\n        return 'Analytics';\n    }\n\n    /**\n     * get provider name of the plugin\n     */\n    public getProviderName(): string {\n        return 'AWSKinesis';\n    }\n\n    /**\n     * configure the plugin\n     * @param {Object} config - configuration\n     */\n    public configure(config): object {\n        logger.debug('configure Analytics', config);\n        const conf = config? config : {};\n        this._config = Object.assign({}, this._config, conf);\n\n        this._setupTimer();\n        return this._config;\n    }\n\n    /**\n     * record an event\n     * @param {Object} params - the params of an event\n     */\n    public async record(params): Promise<boolean> {\n        const credentials = await this._getCredentials();\n        if (!credentials) return Promise.resolve(false);\n\n        Object.assign(params, { config: this._config, credentials });\n\n        return this._putToBuffer(params);\n    }\n\n    public updateEndpoint(params) {\n        logger.debug('updateEndpoint is not implemented in Kinesis provider');\n        return Promise.resolve(true);\n    }\n\n    /**\n     * @private\n     * @param params - params for the event recording\n     * Put events into buffer\n     */\n    private _putToBuffer(params) {\n        if (this._buffer.length < BUFFER_SIZE) {\n            this._buffer.push(params);\n            return Promise.resolve(true);\n        } else {\n            logger.debug('exceed analytics events buffer size');\n            return Promise.reject(false);\n        }\n    }\n\n    private _sendFromBuffer(events) {\n        // collapse events by credentials\n        // events = [ {params} ]\n        const eventsGroups = [];\n        let preCred = null;\n        let group = [];\n        for (let i = 0; i < events.length; i += 1) {\n            const cred = events[i].credentials;\n            if (i === 0) {\n                group.push(events[i]);\n                preCred = cred;\n            } else {\n                if (cred.sessionToken === preCred.sessionToken && cred.identityId === preCred.identityId) {\n                    logger.debug('no change for cred, put event in the same group');\n                    group.push(events[i]);\n                } else {\n                    eventsGroups.push(group);\n                    group = [];\n                    group.push(events[i]);\n                    preCred = cred;\n                }\n            }\n        }\n        eventsGroups.push(group);\n\n        eventsGroups.map(evts => {\n            this._sendEvents(evts);\n        });\n    }\n\n    private _sendEvents(group) {\n        if (group.length === 0) {\n            // logger.debug('events array is empty, directly return');\n            return;\n        }\n\n        const { config, credentials } = group[0];\n\n        const initClients = this._init(config, credentials);\n        if (!initClients) return false;\n\n        const records = {};\n\n        group.map(params => {\n            // spit by streamName\n            const evt = params.event;\n            const { streamName } = evt;\n            if (records[streamName] === undefined) {\n                records[streamName] = [];\n            }\n\n            const Data = JSON.stringify(evt.data);\n            const PartitionKey = evt.partitionKey || ('partition-' + credentials.identityId);\n            const record = { Data, PartitionKey };\n            records[streamName].push(record);\n        });\n\n        Object.keys(records).map(streamName => {\n            logger.debug('putting records to kinesis with records', records[streamName]);\n            this._kinesis.putRecords(\n                {\n                    Records: records[streamName],\n                    StreamName: streamName\n                }, \n                (err, data)=> {\n                    if (err) logger.debug('Failed to upload records to Kinesis', err);\n                    else logger.debug('Upload records to stream', streamName);\n                }\n            );\n        });\n    }\n\n    private _init(config, credentials) {\n        logger.debug('init clients');\n\n        if (this._kinesis\n            && this._config.credentials \n            && this._config.credentials.sessionToken === credentials.sessionToken\n            && this._config.credentials.identityId === credentials.identityId) {\n            logger.debug('no change for analytics config, directly return from init');\n            return true;\n        }\n\n        this._config.credentials = credentials;\n        const { region } = config;\n        logger.debug('initialize kinesis with credentials', credentials);\n        this._kinesis = new Kinesis({\n            apiVersion: '2013-12-02',\n            region,\n            credentials\n        });\n\n        return true;\n    }\n\n    /**\n     * @private\n     * check if current credentials exists\n     */\n    private _getCredentials() {\n        const that = this;\n        return Credentials.get()\n            .then(credentials => {\n                if (!credentials) return null;\n                logger.debug('set credentials for analytics', that._config.credentials);\n                return Credentials.shear(credentials);\n            })\n            .catch(err => {\n                logger.debug('ensure credentials error', err);\n                return null;\n            });\n    }\n}\n"]}},"error":null,"hash":"ef7cff13478ecf20c41b1fd5cf2bf055","cacheData":{"env":{}}}