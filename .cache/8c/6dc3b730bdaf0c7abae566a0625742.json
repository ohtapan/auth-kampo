{"id":"node_modules/@aws-amplify/analytics/lib/index.js","dependencies":[{"name":"C:\\home\\auth-kampo\\node_modules\\@aws-amplify\\analytics\\lib\\index.js.map","includedInParent":true,"mtime":1557861886000},{"name":"C:\\home\\auth-kampo\\node_modules\\@aws-amplify\\analytics\\src\\index.ts","includedInParent":true,"mtime":1557861738000},{"name":"C:\\home\\auth-kampo\\node_modules\\@aws-amplify\\analytics\\package.json","includedInParent":true,"mtime":1560308010598},{"name":"./Analytics","loc":{"line":18,"column":26},"parent":"C:\\home\\auth-kampo\\node_modules\\@aws-amplify\\analytics\\lib\\index.js","resolved":"C:\\home\\auth-kampo\\node_modules\\@aws-amplify\\analytics\\lib\\Analytics.js"},{"name":"@aws-amplify/core","loc":{"line":20,"column":21},"parent":"C:\\home\\auth-kampo\\node_modules\\@aws-amplify\\analytics\\lib\\index.js","resolved":"C:\\home\\auth-kampo\\node_modules\\@aws-amplify\\core\\lib\\index.js"},{"name":"./Providers","loc":{"line":33,"column":17},"parent":"C:\\home\\auth-kampo\\node_modules\\@aws-amplify\\analytics\\lib\\index.js","resolved":"C:\\home\\auth-kampo\\node_modules\\@aws-amplify\\analytics\\lib\\Providers\\index.js"}],"generated":{"js":"\"use strict\";\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Analytics_1 = require(\"./Analytics\");\nexports.AnalyticsClass = Analytics_1.default;\nvar core_1 = require(\"@aws-amplify/core\");\nvar logger = new core_1.ConsoleLogger('Analytics');\nvar endpointUpdated = false;\nvar authConfigured = false;\nvar analyticsConfigured = false;\nvar _instance = null;\nif (!_instance) {\n    logger.debug('Create Analytics Instance');\n    _instance = new Analytics_1.default();\n}\nvar Analytics = _instance;\ncore_1.default.register(Analytics);\nexports.default = Analytics;\n__export(require(\"./Providers\"));\nvar listener = function (capsule) {\n    var channel = capsule.channel, payload = capsule.payload, source = capsule.source;\n    logger.debug('on hub capsule ' + channel, payload);\n    switch (channel) {\n        case 'auth':\n            authEvent(payload);\n            break;\n        case 'storage':\n            storageEvent(payload);\n            break;\n        case 'analytics':\n            analyticsEvent(payload);\n            break;\n        default:\n            break;\n    }\n};\nvar storageEvent = function (payload) {\n    var _a = payload.data, attrs = _a.attrs, metrics = _a.metrics;\n    if (!attrs)\n        return;\n    Analytics.record({\n        name: 'Storage',\n        attributes: attrs,\n        metrics: metrics\n    });\n};\nvar authEvent = function (payload) {\n    var event = payload.event;\n    if (!event) {\n        return;\n    }\n    switch (event) {\n        case 'signIn':\n            Analytics.record({\n                name: '_userauth.sign_in'\n            });\n            break;\n        case 'signUp':\n            Analytics.record({\n                name: '_userauth.sign_up'\n            });\n            break;\n        case 'signOut':\n            break;\n        case 'signIn_failure':\n            Analytics.record({\n                name: '_userauth.auth_fail'\n            });\n            break;\n        case 'configured':\n            authConfigured = true;\n            if (authConfigured && analyticsConfigured) {\n                sendEvents();\n            }\n            break;\n    }\n};\nvar analyticsEvent = function (payload) {\n    var event = payload.event;\n    if (!event)\n        return;\n    switch (event) {\n        case 'pinpointProvider_configured':\n            analyticsConfigured = true;\n            if (authConfigured && analyticsConfigured) {\n                sendEvents();\n            }\n            break;\n    }\n};\nvar sendEvents = function () {\n    var config = Analytics.configure();\n    if (!endpointUpdated && config['autoSessionRecord']) {\n        Analytics.updateEndpoint({ immediate: true }).catch(function (e) {\n            logger.debug('Failed to update the endpoint', e);\n        });\n        endpointUpdated = true;\n    }\n    Analytics.autoTrack('session', {\n        enable: config['autoSessionRecord']\n    });\n};\ncore_1.Hub.listen('auth', listener);\ncore_1.Hub.listen('storage', listener);\ncore_1.Hub.listen('analytics', listener);\n"},"sourceMaps":{"js":{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["/*\r\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\r\n * the License. A copy of the License is located at\r\n *\r\n *     http://aws.amazon.com/apache2.0/\r\n *\r\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\r\n * and limitations under the License.\r\n */\r\n\r\nimport AnalyticsClass from './Analytics';\r\nimport { AnalyticsProvider } from './types';\r\n\r\nimport Amplify, {\r\n    ConsoleLogger as Logger,\r\n    Hub,\r\n    Linking,\r\n    Platform\r\n} from '@aws-amplify/core';\r\n\r\nconst logger = new Logger('Analytics');\r\nlet endpointUpdated = false;\r\nlet authConfigured = false;\r\nlet analyticsConfigured = false;\r\n\r\nlet _instance: AnalyticsClass = null;\r\n\r\nif (!_instance) {\r\n    logger.debug('Create Analytics Instance');\r\n    _instance = new AnalyticsClass();\r\n}\r\n\r\nconst Analytics = _instance;\r\nAmplify.register(Analytics);\r\n\r\nexport default Analytics;\r\nexport { AnalyticsProvider };\r\nexport { AnalyticsClass };\r\nexport * from './Providers';\r\n\r\nconst listener = (capsule) => {\r\n    const { channel, payload, source } = capsule;\r\n    logger.debug('on hub capsule ' + channel, payload);\r\n\r\n    switch(channel) {\r\n        case 'auth':\r\n            authEvent(payload);\r\n            break;\r\n        case 'storage':\r\n            storageEvent(payload);\r\n            break;\r\n        case 'analytics':\r\n            analyticsEvent(payload);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n};\r\n\r\nconst storageEvent = (payload) => {\r\n    const { data: { attrs, metrics }} = payload;\r\n    if (!attrs) return;\r\n\r\n    Analytics.record({\r\n        name: 'Storage', \r\n        attributes: attrs, \r\n        metrics\r\n    });\r\n};\r\n\r\nconst authEvent = (payload) => {\r\n    const { event } = payload;\r\n    if (!event) { return; }\r\n\r\n    switch(event) {\r\n        case 'signIn':\r\n            Analytics.record({\r\n                name: '_userauth.sign_in'\r\n            });\r\n            break;\r\n        case 'signUp':\r\n            Analytics.record({\r\n                name: '_userauth.sign_up'\r\n            });\r\n            break;\r\n        case 'signOut':\r\n            break;\r\n        case 'signIn_failure':\r\n            Analytics.record({\r\n                name: '_userauth.auth_fail'\r\n            });\r\n            break;\r\n        case 'configured':\r\n            authConfigured = true;\r\n            if (authConfigured && analyticsConfigured) {\r\n                sendEvents();\r\n            }\r\n            break;\r\n    }\r\n};\r\n\r\nconst analyticsEvent = (payload) => {\r\n    const { event } = payload;\r\n    if (!event) return;\r\n\r\n     switch(event) {\r\n         case 'pinpointProvider_configured':\r\n            analyticsConfigured = true;\r\n            if (authConfigured && analyticsConfigured) {\r\n                sendEvents();\r\n            }\r\n            break;\r\n     }\r\n};\r\n\r\nconst sendEvents = () => {\r\n    const config = Analytics.configure();\r\n    if (!endpointUpdated && config['autoSessionRecord']) {\r\n        Analytics.updateEndpoint({ immediate: true }).catch(e => {\r\n            logger.debug('Failed to update the endpoint', e);\r\n        });\r\n        endpointUpdated = true;\r\n    }\r\n    Analytics.autoTrack('session', {\r\n        enable: config['autoSessionRecord']\r\n    });\r\n};\r\n\r\nHub.listen('auth', listener);\r\nHub.listen('storage', listener);\r\nHub.listen('analytics', listener);\r\n"]}},"error":null,"hash":"80fe3188877b4f1883cded2083f4f132","cacheData":{"env":{}}}