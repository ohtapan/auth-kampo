{"id":"node_modules/@aws-amplify/pubsub/lib/Providers/PubSubProvider.js","dependencies":[{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\pubsub\\lib\\Providers\\PubSubProvider.js.map","includedInParent":true,"mtime":1557861849000},{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\pubsub\\src\\Providers\\PubSubProvider.ts","includedInParent":true,"mtime":1557861739000},{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\pubsub\\package.json","includedInParent":true,"mtime":1560308010595},{"name":"@aws-amplify/core","loc":{"line":11,"column":21},"parent":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\pubsub\\lib\\Providers\\PubSubProvider.js","resolved":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\core\\lib\\index.js"}],"generated":{"js":"\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@aws-amplify/core\");\nvar logger = new core_1.ConsoleLogger('AbstractPubSubProvider');\nvar AbstractPubSubProvider = /** @class */ (function () {\n    function AbstractPubSubProvider(options) {\n        if (options === void 0) { options = {}; }\n        this._config = options;\n    }\n    AbstractPubSubProvider.prototype.configure = function (config) {\n        if (config === void 0) { config = {}; }\n        this._config = __assign({}, config, this._config);\n        logger.debug(\"configure \" + this.getProviderName(), this._config);\n        return this.options;\n    };\n    AbstractPubSubProvider.prototype.getCategory = function () { return 'PubSub'; };\n    Object.defineProperty(AbstractPubSubProvider.prototype, \"options\", {\n        get: function () { return __assign({}, this._config); },\n        enumerable: true,\n        configurable: true\n    });\n    return AbstractPubSubProvider;\n}());\nexports.AbstractPubSubProvider = AbstractPubSubProvider;\n"},"sourceMaps":{"js":{"version":3,"file":"PubSubProvider.js","sourceRoot":"","sources":["../../src/Providers/PubSubProvider.ts"],"names":[],"mappings":";;;;;;;;;;AAcA,0CAA4D;AAE5D,IAAM,MAAM,GAAG,IAAI,oBAAM,CAAC,wBAAwB,CAAC,CAAC;AAEpD;IAII,gCAAY,OAA8B;QAA9B,wBAAA,EAAA,YAA8B;QACtC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;IAED,0CAAS,GAAT,UAAU,MAA6B;QAA7B,uBAAA,EAAA,WAA6B;QACnC,IAAI,CAAC,OAAO,gBAAQ,MAAM,EAAK,IAAI,CAAC,OAAO,CAAE,CAAC;QAE9C,MAAM,CAAC,KAAK,CAAC,eAAa,IAAI,CAAC,eAAe,EAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QAElE,OAAO,IAAI,CAAC,OAAO,CAAC;IACxB,CAAC;IAED,4CAAW,GAAX,cAAgB,OAAO,QAAQ,CAAC,CAAC,CAAC;IAIlC,sBAAc,2CAAO;aAArB,cAA4C,oBAAY,IAAI,CAAC,OAAO,EAAG,CAAC,CAAC;;;OAAA;IAQ7E,6BAAC;AAAD,CAAC,AA5BD,IA4BC;AA5BqB,wDAAsB","sourcesContent":["/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport * as Observable from 'zen-observable';\nimport { PubSubProvider, ProvidertOptions } from '../types';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\n\nconst logger = new Logger('AbstractPubSubProvider');\n\nexport abstract class AbstractPubSubProvider implements PubSubProvider {\n\n    private _config: ProvidertOptions;\n\n    constructor(options: ProvidertOptions = {}) {\n        this._config = options;\n    }\n\n    configure(config: ProvidertOptions = {}): ProvidertOptions {\n        this._config = { ...config, ...this._config };\n\n        logger.debug(`configure ${this.getProviderName()}`, this._config);\n\n        return this.options;\n    }\n\n    getCategory() { return 'PubSub'; }\n\n    abstract getProviderName(): string;\n\n    protected get options(): ProvidertOptions { return { ...this._config }; }\n\n    public abstract newClient(clientOptions: ProvidertOptions): Promise<any>;\n\n    public abstract publish(topics: string[] | string, msg: any, options?: ProvidertOptions): void;\n\n    public abstract subscribe(topics: string[] | string, options?: ProvidertOptions): Observable<any>;\n\n}\n"]}},"error":null,"hash":"1244af2dd58239704dedc03e4e8ce17a","cacheData":{"env":{}}}