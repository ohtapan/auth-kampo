{"id":"node_modules/@aws-amplify/core/lib/I18n/I18n.js","dependencies":[{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\core\\lib\\I18n\\I18n.js.map","includedInParent":true,"mtime":1557861835000},{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\core\\src\\I18n\\I18n.ts","includedInParent":true,"mtime":1557861739000},{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\core\\package.json","includedInParent":true,"mtime":1560308010599},{"name":"../Logger","loc":{"line":15,"column":23},"parent":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\core\\lib\\I18n\\I18n.js","resolved":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\core\\lib\\Logger\\index.js"}],"generated":{"js":"\"use strict\";\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Logger_1 = require(\"../Logger\");\nvar logger = new Logger_1.ConsoleLogger('I18n');\n/**\n * Language transition class\n */\nvar I18n = /** @class */ (function () {\n    /**\n     * @constructor\n     * Initialize with configurations\n     * @param {Object} options\n     */\n    function I18n(options) {\n        /**\n         * @private\n         */\n        this._options = null;\n        /**\n         * @private\n         */\n        this._lang = null;\n        /**\n         * @private\n         */\n        this._dict = {};\n        this._options = Object.assign({}, options);\n        this._lang = this._options.language;\n        if (!this._lang && typeof window !== 'undefined' && window && window.navigator) {\n            this._lang = window.navigator.language;\n        }\n        logger.debug(this._lang);\n    }\n    /**\n     * @method\n     * Explicitly setting language\n     * @param {String} lang\n     */\n    I18n.prototype.setLanguage = function (lang) {\n        this._lang = lang;\n    };\n    /**\n     * @method\n     * Get value\n     * @param {String} key\n     * @param {String} defVal - Default value\n     */\n    I18n.prototype.get = function (key, defVal) {\n        if (defVal === void 0) { defVal = undefined; }\n        if (!this._lang) {\n            return (typeof defVal !== 'undefined') ? defVal : key;\n        }\n        var lang = this._lang;\n        var val = this.getByLanguage(key, lang);\n        if (val) {\n            return val;\n        }\n        if (lang.indexOf('-') > 0) {\n            val = this.getByLanguage(key, lang.split('-')[0]);\n        }\n        if (val) {\n            return val;\n        }\n        return (typeof defVal !== 'undefined') ? defVal : key;\n    };\n    /**\n     * @method\n     * Get value according to specified language\n     * @param {String} key\n     * @param {String} language - Specified langurage to be used\n     * @param {String} defVal - Default value\n     */\n    I18n.prototype.getByLanguage = function (key, language, defVal) {\n        if (defVal === void 0) { defVal = null; }\n        if (!language) {\n            return defVal;\n        }\n        var lang_dict = this._dict[language];\n        if (!lang_dict) {\n            return defVal;\n        }\n        return lang_dict[key];\n    };\n    /**\n     * @method\n     * Add vocabularies for one language\n     * @param {String} langurage - Language of the dictionary\n     * @param {Object} vocabularies - Object that has key-value as dictionary entry\n     */\n    I18n.prototype.putVocabulariesForLanguage = function (language, vocabularies) {\n        var lang_dict = this._dict[language];\n        if (!lang_dict) {\n            lang_dict = this._dict[language] = {};\n        }\n        Object.assign(lang_dict, vocabularies);\n    };\n    /**\n     * @method\n     * Add vocabularies for one language\n     * @param {Object} vocabularies - Object that has language as key,\n     *                                vocabularies of each language as value\n     */\n    I18n.prototype.putVocabularies = function (vocabularies) {\n        var _this = this;\n        Object.keys(vocabularies).map(function (key) {\n            _this.putVocabulariesForLanguage(key, vocabularies[key]);\n        });\n    };\n    return I18n;\n}());\nexports.I18n = I18n;\n"},"sourceMaps":{"js":{"version":3,"file":"I18n.js","sourceRoot":"","sources":["../../src/I18n/I18n.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { I18nOptions } from './types';\nimport { ConsoleLogger as Logger } from '../Logger';\n\nconst logger = new Logger('I18n');\n\n/**\n * Language transition class\n */\nexport class I18n {\n    /**\n     * @private\n     */\n    _options:I18nOptions = null;\n\n    /**\n     * @private\n     */\n    _lang = null;\n\n    /**\n     * @private\n     */\n    _dict = {};\n\n    /**\n     * @constructor\n     * Initialize with configurations\n     * @param {Object} options \n     */\n    constructor(options: I18nOptions) {\n        this._options = Object.assign({}, options);\n        this._lang = this._options.language;\n\n        if (!this._lang && typeof window !== 'undefined' && window && window.navigator) {\n            this._lang = window.navigator.language;\n        }\n\n        logger.debug(this._lang);\n    }\n\n    /**\n     * @method\n     * Explicitly setting language\n     * @param {String} lang \n     */\n    setLanguage(lang:string) {\n        this._lang = lang;\n    }\n\n    /**\n     * @method\n     * Get value\n     * @param {String} key \n     * @param {String} defVal - Default value\n     */\n    get(key, defVal=undefined) {\n        if (!this._lang) {\n            return (typeof defVal !== 'undefined')? defVal : key;\n        }\n\n        const lang = this._lang;\n        let val = this.getByLanguage(key, lang);\n        if (val) { return val; }\n\n        if (lang.indexOf('-') > 0) {\n            val = this.getByLanguage(key, lang.split('-')[0]);\n        }\n        if (val) { return val; }\n\n        return (typeof defVal !== 'undefined')? defVal : key;\n    }\n\n    /**\n     * @method\n     * Get value according to specified language\n     * @param {String} key \n     * @param {String} language - Specified langurage to be used\n     * @param {String} defVal - Default value\n     */\n    getByLanguage(key, language, defVal=null) {\n        if (!language) { return defVal; }\n\n        const lang_dict = this._dict[language];\n        if (!lang_dict) { return defVal; }\n\n        return lang_dict[key];\n    }\n\n    /**\n     * @method\n     * Add vocabularies for one language\n     * @param {String} langurage - Language of the dictionary\n     * @param {Object} vocabularies - Object that has key-value as dictionary entry\n     */\n    putVocabulariesForLanguage(language, vocabularies) {\n        let lang_dict = this._dict[language];\n        if (!lang_dict) { lang_dict = this._dict[language] = {}; }\n        Object.assign(lang_dict, vocabularies);\n    }\n\n    /**\n     * @method\n     * Add vocabularies for one language\n     * @param {Object} vocabularies - Object that has language as key,\n     *                                vocabularies of each language as value\n     */\n    putVocabularies(vocabularies) {\n        Object.keys(vocabularies).map(key => {\n            this.putVocabulariesForLanguage(key, vocabularies[key]);\n        });\n    }\n}\n"]}},"error":null,"hash":"e6f438d4fec75428d120c346dfe544c8","cacheData":{"env":{}}}