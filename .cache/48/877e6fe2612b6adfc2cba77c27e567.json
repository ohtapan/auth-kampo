{"id":"node_modules/@aws-amplify/core/lib/Parser.js","dependencies":[{"name":"C:\\home\\auth-kampo\\node_modules\\@aws-amplify\\core\\lib\\Parser.js.map","includedInParent":true,"mtime":1557861835000},{"name":"C:\\home\\auth-kampo\\node_modules\\@aws-amplify\\core\\src\\Parser.ts","includedInParent":true,"mtime":1557861739000},{"name":"C:\\home\\auth-kampo\\node_modules\\@aws-amplify\\core\\package.json","includedInParent":true,"mtime":1560308010599},{"name":"./Logger","loc":{"line":3,"column":23},"parent":"C:\\home\\auth-kampo\\node_modules\\@aws-amplify\\core\\lib\\Parser.js","resolved":"C:\\home\\auth-kampo\\node_modules\\@aws-amplify\\core\\lib\\Logger\\index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar Logger_1 = require(\"./Logger\");\nvar logger = new Logger_1.ConsoleLogger('Parser');\nvar Parser = /** @class */ (function () {\n    function Parser() {\n    }\n    Parser.parseMobilehubConfig = function (config) {\n        var amplifyConfig = {};\n        // Analytics\n        if (config['aws_mobile_analytics_app_id']) {\n            var Analytics = {\n                AWSPinpoint: {\n                    appId: config['aws_mobile_analytics_app_id'],\n                    region: config['aws_mobile_analytics_app_region']\n                }\n            };\n            amplifyConfig.Analytics = Analytics;\n        }\n        // Auth\n        if (config['aws_cognito_identity_pool_id'] || config['aws_user_pools_id']) {\n            var Auth = {\n                userPoolId: config['aws_user_pools_id'],\n                userPoolWebClientId: config['aws_user_pools_web_client_id'],\n                region: config['aws_cognito_region'],\n                identityPoolId: config['aws_cognito_identity_pool_id'],\n                mandatorySignIn: config['aws_mandatory_sign_in'] === 'enable' ? true : false\n            };\n            amplifyConfig.Auth = Auth;\n        }\n        // Storage\n        var storageConfig;\n        if (config['aws_user_files_s3_bucket']) {\n            storageConfig = {\n                AWSS3: {\n                    bucket: config['aws_user_files_s3_bucket'],\n                    region: config['aws_user_files_s3_bucket_region']\n                }\n            };\n        }\n        else {\n            storageConfig = config ? config.Storage || config : {};\n        }\n        amplifyConfig.Analytics = Object.assign({}, amplifyConfig.Analytics, config.Analytics);\n        amplifyConfig.Auth = Object.assign({}, amplifyConfig.Auth, config.Auth);\n        amplifyConfig.Storage = Object.assign({}, storageConfig);\n        logger.debug('parse config', config, 'to amplifyconfig', amplifyConfig);\n        return amplifyConfig;\n    };\n    return Parser;\n}());\nexports.default = Parser;\n"},"sourceMaps":{"js":{"version":3,"file":"Parser.js","sourceRoot":"","sources":["../src/Parser.ts"],"names":[],"mappings":";;AACA,mCAAmD;AAEnD,IAAM,MAAM,GAAG,IAAI,sBAAM,CAAC,QAAQ,CAAC,CAAC;AAEpC;IAAA;IA4CA,CAAC;IA3CU,2BAAoB,GAA3B,UAA4B,MAAM;QAC9B,IAAM,aAAa,GAAkB,EAAE,CAAC;QACxC,YAAY;QACZ,IAAI,MAAM,CAAC,6BAA6B,CAAC,EAAE;YACvC,IAAM,SAAS,GAAG;gBACd,WAAW,EAAE;oBACT,KAAK,EAAE,MAAM,CAAC,6BAA6B,CAAC;oBAC5C,MAAM,EAAE,MAAM,CAAC,iCAAiC,CAAC;iBACpD;aACJ,CAAC;YACF,aAAa,CAAC,SAAS,GAAG,SAAS,CAAC;SACvC;QAED,OAAO;QACP,IAAI,MAAM,CAAC,8BAA8B,CAAC,IAAI,MAAM,CAAC,mBAAmB,CAAC,EAAE;YACvE,IAAM,IAAI,GAAG;gBACT,UAAU,EAAE,MAAM,CAAC,mBAAmB,CAAC;gBACvC,mBAAmB,EAAE,MAAM,CAAC,8BAA8B,CAAC;gBAC3D,MAAM,EAAE,MAAM,CAAC,oBAAoB,CAAC;gBACpC,cAAc,EAAE,MAAM,CAAC,8BAA8B,CAAC;gBACtD,eAAe,EAAE,MAAM,CAAC,uBAAuB,CAAC,KAAK,QAAQ,CAAA,CAAC,CAAC,IAAI,CAAA,CAAC,CAAC,KAAK;aAC7E,CAAC;YACF,aAAa,CAAC,IAAI,GAAG,IAAI,CAAC;SAC7B;QAED,UAAU;QACV,IAAI,aAAa,CAAC;QAClB,IAAI,MAAM,CAAC,0BAA0B,CAAC,EAAE;YACpC,aAAa,GAAG;gBACZ,KAAK,EAAE;oBACH,MAAM,EAAE,MAAM,CAAC,0BAA0B,CAAC;oBAC1C,MAAM,EAAE,MAAM,CAAC,iCAAiC,CAAC;iBACpD;aACJ,CAAC;SACL;aAAM;YACH,aAAa,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC;SAC1D;QACD,aAAa,CAAC,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,aAAa,CAAC,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC,CAAC;QACvF,aAAa,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,aAAa,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;QACxE,aAAa,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC;QACzD,MAAM,CAAC,KAAK,CAAC,cAAc,EAAE,MAAM,EAAE,kBAAkB,EAAE,aAAa,CAAC,CAAC;QACxE,OAAO,aAAa,CAAC;IACzB,CAAC;IACL,aAAC;AAAD,CAAC,AA5CD,IA4CC","sourcesContent":["import { AmplifyConfig } from './types';\nimport { ConsoleLogger as Logger } from './Logger';\n\nconst logger = new Logger('Parser');\n\nexport default class Parser {\n    static parseMobilehubConfig(config): AmplifyConfig {\n        const amplifyConfig: AmplifyConfig = {};\n        // Analytics\n        if (config['aws_mobile_analytics_app_id']) {\n            const Analytics = {\n                AWSPinpoint: {\n                    appId: config['aws_mobile_analytics_app_id'],\n                    region: config['aws_mobile_analytics_app_region']\n                }\n            };\n            amplifyConfig.Analytics = Analytics;\n        }\n\n        // Auth\n        if (config['aws_cognito_identity_pool_id'] || config['aws_user_pools_id']) {\n            const Auth = {\n                userPoolId: config['aws_user_pools_id'],\n                userPoolWebClientId: config['aws_user_pools_web_client_id'],\n                region: config['aws_cognito_region'],\n                identityPoolId: config['aws_cognito_identity_pool_id'],\n                mandatorySignIn: config['aws_mandatory_sign_in'] === 'enable'? true: false\n            };\n            amplifyConfig.Auth = Auth;\n        }\n\n        // Storage\n        let storageConfig;\n        if (config['aws_user_files_s3_bucket']) {\n            storageConfig = {\n                AWSS3: {\n                    bucket: config['aws_user_files_s3_bucket'],\n                    region: config['aws_user_files_s3_bucket_region']\n                }\n            };\n        } else {\n            storageConfig = config ? config.Storage || config : {};\n        } \n        amplifyConfig.Analytics = Object.assign({}, amplifyConfig.Analytics, config.Analytics);\n        amplifyConfig.Auth = Object.assign({}, amplifyConfig.Auth, config.Auth);\n        amplifyConfig.Storage = Object.assign({}, storageConfig);\n        logger.debug('parse config', config, 'to amplifyconfig', amplifyConfig);\n        return amplifyConfig;\n    }\n}\n"]}},"error":null,"hash":"97ffcb2886d124d2d4230f8cdd094c30","cacheData":{"env":{}}}