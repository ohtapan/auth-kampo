{"id":"node_modules/@aws-amplify/interactions/lib/Interactions.js","dependencies":[{"name":"C:\\home\\auth-kampo\\node_modules\\@aws-amplify\\interactions\\lib\\Interactions.js.map","includedInParent":true,"mtime":1557861849000},{"name":"C:\\home\\auth-kampo\\node_modules\\@aws-amplify\\interactions\\src\\Interactions.ts","includedInParent":true,"mtime":1557861739000},{"name":"C:\\home\\auth-kampo\\node_modules\\@aws-amplify\\interactions\\package.json","includedInParent":true,"mtime":1560308010596},{"name":"@aws-amplify/core","loc":{"line":46,"column":21},"parent":"C:\\home\\auth-kampo\\node_modules\\@aws-amplify\\interactions\\lib\\Interactions.js","resolved":"C:\\home\\auth-kampo\\node_modules\\@aws-amplify\\core\\lib\\index.js"},{"name":"./Providers","loc":{"line":47,"column":26},"parent":"C:\\home\\auth-kampo\\node_modules\\@aws-amplify\\interactions\\lib\\Interactions.js","resolved":"C:\\home\\auth-kampo\\node_modules\\@aws-amplify\\interactions\\lib\\Providers\\index.js"}],"generated":{"js":"\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@aws-amplify/core\");\nvar Providers_1 = require(\"./Providers\");\nvar logger = new core_1.ConsoleLogger('Interactions');\nvar Interactions = /** @class */ (function () {\n    /**\n     * Initialize PubSub with AWS configurations\n     *\n     * @param {InteractionsOptions} options - Configuration object for Interactions\n     */\n    function Interactions(options) {\n        this._options = options;\n        logger.debug('Interactions Options', this._options);\n        this._pluggables = {};\n    }\n    Interactions.prototype.getModuleName = function () {\n        return 'Interactions';\n    };\n    /**\n     *\n     * @param {InteractionsOptions} options - Configuration object for Interactions\n     * @return {Object} - The current configuration\n     */\n    Interactions.prototype.configure = function (options) {\n        var _this = this;\n        var opt = options ? options.Interactions || options : {};\n        logger.debug('configure Interactions', { opt: opt });\n        this._options = __assign({ bots: {} }, opt, opt.Interactions);\n        var aws_bots_config = this._options.aws_bots_config;\n        var bots_config = this._options.bots;\n        if (!Object.keys(bots_config).length && aws_bots_config) {\n            // Convert aws_bots_config to bots object\n            if (Array.isArray(aws_bots_config)) {\n                aws_bots_config.forEach(function (bot) {\n                    _this._options.bots[bot.name] = bot;\n                });\n            }\n        }\n        // Check if AWSLex provider is already on pluggables\n        if (!this._pluggables.AWSLexProvider && bots_config &&\n            Object.keys(bots_config).\n                map(function (key) { return bots_config[key]; }).\n                find(function (bot) { return !bot.providerName || bot.providerName === 'AWSLexProvider'; })) {\n            this._pluggables.AWSLexProvider = new Providers_1.AWSLexProvider();\n        }\n        Object.keys(this._pluggables).map(function (key) {\n            _this._pluggables[key].configure(_this._options.bots);\n        });\n        return this._options;\n    };\n    Interactions.prototype.addPluggable = function (pluggable) {\n        if (pluggable && pluggable.getCategory() === 'Interactions') {\n            if (!this._pluggables[pluggable.getProviderName()]) {\n                pluggable.configure(this._options.bots);\n                this._pluggables[pluggable.getProviderName()] = pluggable;\n                return;\n            }\n            else {\n                throw new Error('Bot ' + pluggable.getProviderName() + ' already plugged');\n            }\n        }\n    };\n    Interactions.prototype.send = function (botname, message) {\n        return __awaiter(this, void 0, void 0, function () {\n            var botProvider;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!this._options.bots || !this._options.bots[botname]) {\n                            throw new Error('Bot ' + botname + ' does not exist');\n                        }\n                        botProvider = this._options.bots[botname].providerName || 'AWSLexProvider';\n                        if (!this._pluggables[botProvider]) {\n                            throw new Error('Bot ' + botProvider +\n                                ' does not have valid pluggin did you try addPluggable first?');\n                        }\n                        return [4 /*yield*/, this._pluggables[botProvider].sendMessage(botname, message)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    Interactions.prototype.onComplete = function (botname, callback) {\n        if (!this._options.bots || !this._options.bots[botname]) {\n            throw new Error('Bot ' + botname + ' does not exist');\n        }\n        var botProvider = this._options.bots[botname].providerName || 'AWSLexProvider';\n        if (!this._pluggables[botProvider]) {\n            throw new Error('Bot ' + botProvider +\n                ' does not have valid pluggin did you try addPluggable first?');\n        }\n        this._pluggables[botProvider].onComplete(botname, callback);\n    };\n    return Interactions;\n}());\nexports.default = Interactions;\n"},"sourceMaps":{"js":{"version":3,"file":"Interactions.js","sourceRoot":"","sources":["../src/Interactions.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n* Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n* the License. A copy of the License is located at\n*\n*     http://aws.amazon.com/apache2.0/\n*\n* or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n* CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n* and limitations under the License.\n*/\nimport { InteractionsOptions, InteractionsProviders, InteractionsResponse, InteractionsProvider } from './types';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { AWSLexProvider } from './Providers';\nconst logger = new Logger('Interactions');\n\nexport default class Interactions {\n\n    private _options: InteractionsOptions;\n\n    private _pluggables: InteractionsProviders;\n\n    /**\n     * Initialize PubSub with AWS configurations\n     * \n     * @param {InteractionsOptions} options - Configuration object for Interactions\n     */\n    constructor(options: InteractionsOptions) {\n        this._options = options;\n        logger.debug('Interactions Options', this._options);\n        this._pluggables = {};\n    }\n\n    public getModuleName() {\n        return 'Interactions';\n    }\n\n    /**\n     * \n     * @param {InteractionsOptions} options - Configuration object for Interactions\n     * @return {Object} - The current configuration\n     */\n    configure(options: InteractionsOptions) {\n        const opt = options ? options.Interactions || options : {};\n        logger.debug('configure Interactions', { opt });\n        this._options = { bots: {}, ...opt, ...opt.Interactions };\n\n        const aws_bots_config = this._options.aws_bots_config;\n        const bots_config = this._options.bots;\n\n        if (!Object.keys(bots_config).length && aws_bots_config) {\n            // Convert aws_bots_config to bots object\n            if (Array.isArray(aws_bots_config)) {\n                aws_bots_config.forEach(bot => {\n                    this._options.bots[bot.name] = bot;\n                });\n            }\n        }\n\n        // Check if AWSLex provider is already on pluggables\n        if (!this._pluggables.AWSLexProvider && bots_config &&\n            Object.keys(bots_config).\n                map(key => bots_config[key]).\n                find(bot => !bot.providerName || bot.providerName === 'AWSLexProvider')) {\n            this._pluggables.AWSLexProvider = new AWSLexProvider();\n        }\n\n        Object.keys(this._pluggables).map(key => {\n            this._pluggables[key].configure(this._options.bots);\n        });\n\n        return this._options;\n    }\n\n    public addPluggable(pluggable: InteractionsProvider) {\n        if (pluggable && pluggable.getCategory() === 'Interactions') {\n            if (!this._pluggables[pluggable.getProviderName()]) {\n                pluggable.configure(this._options.bots);\n                this._pluggables[pluggable.getProviderName()] = pluggable;\n                return;\n            } else {\n                throw new Error('Bot ' + pluggable.getProviderName() + ' already plugged');\n            }\n        }\n    }\n\n    public async send(botname: string, message: string | Object) {\n        if (!this._options.bots || !this._options.bots[botname]) {\n            throw new Error('Bot ' + botname + ' does not exist');\n        }\n\n        const botProvider = this._options.bots[botname].providerName || 'AWSLexProvider';\n\n        if (!this._pluggables[botProvider]) {\n            throw new Error('Bot ' + botProvider +\n                ' does not have valid pluggin did you try addPluggable first?');\n        }\n        return await this._pluggables[botProvider].sendMessage(botname, message);\n\n    }\n\n    public onComplete(botname: string, callback: (err, confirmation) => void) {\n        if (!this._options.bots || !this._options.bots[botname]) {\n            throw new Error('Bot ' + botname + ' does not exist');\n        }\n        const botProvider = this._options.bots[botname].providerName || 'AWSLexProvider';\n\n        if (!this._pluggables[botProvider]) {\n            throw new Error('Bot ' + botProvider +\n                ' does not have valid pluggin did you try addPluggable first?');\n        }\n        this._pluggables[botProvider].onComplete(botname, callback);\n\n    }\n}\n"]}},"error":null,"hash":"e140a4b987248cebaf001e08af8cbc5b","cacheData":{"env":{}}}