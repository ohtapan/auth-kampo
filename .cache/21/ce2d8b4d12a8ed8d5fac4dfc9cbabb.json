{"id":"node_modules/@aws-amplify/core/lib/I18n/index.js","dependencies":[{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\core\\lib\\I18n\\index.js.map","includedInParent":true,"mtime":1557861835000},{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\core\\src\\I18n\\index.ts","includedInParent":true,"mtime":1557861739000},{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\core\\package.json","includedInParent":true,"mtime":1560308010599},{"name":"./I18n","loc":{"line":15,"column":21},"parent":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\core\\lib\\I18n\\index.js","resolved":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\core\\lib\\I18n\\I18n.js"},{"name":"../Logger","loc":{"line":16,"column":23},"parent":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\core\\lib\\I18n\\index.js","resolved":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\core\\lib\\Logger\\index.js"},{"name":"../Amplify","loc":{"line":17,"column":24},"parent":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\core\\lib\\I18n\\index.js","resolved":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\core\\lib\\Amplify.js"}],"generated":{"js":"\"use strict\";\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar I18n_1 = require(\"./I18n\");\nvar Logger_1 = require(\"../Logger\");\nvar Amplify_1 = require(\"../Amplify\");\nvar logger = new Logger_1.ConsoleLogger('I18n');\nvar _config = null;\nvar _i18n = null;\n/**\n * Export I18n APIs\n */\nvar I18n = /** @class */ (function () {\n    function I18n() {\n    }\n    /**\n     * @static\n     * @method\n     * Configure I18n part\n     * @param {Object} config - Configuration of the I18n\n     */\n    I18n.configure = function (config) {\n        logger.debug('configure I18n');\n        if (!config) {\n            return _config;\n        }\n        _config = Object.assign({}, _config, config.I18n || config);\n        I18n.createInstance();\n        return _config;\n    };\n    I18n.getModuleName = function () {\n        return 'I18n';\n    };\n    /**\n     * @static\n     * @method\n     * Create an instance of I18n for the library\n     */\n    I18n.createInstance = function () {\n        logger.debug('create I18n instance');\n        if (_i18n) {\n            return;\n        }\n        _i18n = new I18n_1.I18n(_config);\n    };\n    /**\n     * @static @method\n     * Explicitly setting language\n     * @param {String} lang\n     */\n    I18n.setLanguage = function (lang) {\n        I18n.checkConfig();\n        return _i18n.setLanguage(lang);\n    };\n    /**\n     * @static @method\n     * Get value\n     * @param {String} key\n     * @param {String} defVal - Default value\n     */\n    I18n.get = function (key, defVal) {\n        if (!I18n.checkConfig()) {\n            return (typeof defVal === 'undefined') ? key : defVal;\n        }\n        return _i18n.get(key, defVal);\n    };\n    /**\n     * @static\n     * @method\n     * Add vocabularies for one language\n     * @param {String} langurage - Language of the dictionary\n     * @param {Object} vocabularies - Object that has key-value as dictionary entry\n     */\n    I18n.putVocabulariesForLanguage = function (language, vocabularies) {\n        I18n.checkConfig();\n        return _i18n.putVocabulariesForLanguage(language, vocabularies);\n    };\n    /**\n     * @static\n     * @method\n     * Add vocabularies for one language\n     * @param {Object} vocabularies - Object that has language as key,\n     *                                vocabularies of each language as value\n     */\n    I18n.putVocabularies = function (vocabularies) {\n        I18n.checkConfig();\n        return _i18n.putVocabularies(vocabularies);\n    };\n    I18n.checkConfig = function () {\n        if (!_i18n) {\n            _i18n = new I18n_1.I18n(_config);\n        }\n        return true;\n    };\n    return I18n;\n}());\nAmplify_1.default.register(I18n);\nexports.default = I18n;\n"},"sourceMaps":{"js":{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/I18n/index.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;GAWG;;AAEH,+BAA2C;AAE3C,oCAAoD;AACpD,sCAAiC;AAEjC,IAAM,MAAM,GAAG,IAAI,sBAAM,CAAC,MAAM,CAAC,CAAC;AAElC,IAAI,OAAO,GAAG,IAAI,CAAC;AACnB,IAAI,KAAK,GAAG,IAAI,CAAC;AAEjB;;GAEG;AACH;IAAA;IAuFA,CAAC;IAtFG;;;;;OAKG;IACI,cAAS,GAAhB,UAAiB,MAAM;QACnB,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QAC/B,IAAI,CAAC,MAAM,EAAE;YAAE,OAAO,OAAO,CAAC;SAAE;QAEhC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,EAAE,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC;QAE5D,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,OAAO,OAAO,CAAC;IACnB,CAAC;IAEM,kBAAa,GAApB;QACI,OAAO,MAAM,CAAC;IAClB,CAAC;IAEF;;;;OAIG;IACK,mBAAc,GAArB;QACI,MAAM,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;QACrC,IAAI,KAAK,EAAE;YAAE,OAAO;SAAE;QACtB,KAAK,GAAG,IAAI,WAAS,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAED;;;;OAIG;IACI,gBAAW,GAAlB,UAAmB,IAAI;QACnB,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,OAAO,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAED;;;;;OAKG;IACI,QAAG,GAAV,UAAW,GAAG,EAAE,MAAO;QACnB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE;YAAE,OAAO,CAAC,OAAO,MAAM,KAAK,WAAW,CAAC,CAAA,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC;SAAE;QAElF,OAAO,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;IAClC,CAAC;IAED;;;;;;OAMG;IACI,+BAA0B,GAAjC,UAAkC,QAAQ,EAAE,YAAY;QACpD,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,OAAO,KAAK,CAAC,0BAA0B,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;IACpE,CAAC;IAED;;;;;;OAMG;IACI,oBAAe,GAAtB,UAAuB,YAAY;QAC/B,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,OAAO,KAAK,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;IAC/C,CAAC;IAEa,gBAAW,GAAzB;QACI,IAAI,CAAC,KAAK,EAAE;YAAE,KAAK,GAAG,IAAI,WAAS,CAAC,OAAO,CAAC,CAAC;SAAE;QAE/C,OAAO,IAAI,CAAC;IAChB,CAAC;IACL,WAAC;AAAD,CAAC,AAvFD,IAuFC;AAED,iBAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACvB,kBAAe,IAAI,CAAC","sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n\nimport { I18n as I18nClass } from './I18n';\n\nimport { ConsoleLogger as Logger } from '../Logger';\nimport Amplify from '../Amplify';\n\nconst logger = new Logger('I18n');\n\nlet _config = null;\nlet _i18n = null;\n\n/**\n * Export I18n APIs\n */\nclass I18n {\n    /**\n     * @static\n     * @method\n     * Configure I18n part\n     * @param {Object} config - Configuration of the I18n\n     */\n    static configure(config) {\n        logger.debug('configure I18n');\n        if (!config) { return _config; }\n\n        _config = Object.assign({}, _config, config.I18n || config);\n\n        I18n.createInstance();\n\n        return _config;\n    }\n\n    static getModuleName(){\n        return 'I18n';\n    }\n\n   /**\n    * @static\n    * @method\n    * Create an instance of I18n for the library\n    */\n    static createInstance() {\n        logger.debug('create I18n instance');\n        if (_i18n) { return; }\n        _i18n = new I18nClass(_config);\n    }\n\n    /**\n     * @static @method\n     * Explicitly setting language\n     * @param {String} lang \n     */\n    static setLanguage(lang) {\n        I18n.checkConfig();\n\n        return _i18n.setLanguage(lang); \n    }\n\n    /**\n     * @static @method\n     * Get value\n     * @param {String} key \n     * @param {String} defVal - Default value\n     */\n    static get(key, defVal?) {\n        if (!I18n.checkConfig()) { return (typeof defVal === 'undefined')? key : defVal; }\n\n        return _i18n.get(key, defVal); \n    }\n\n    /**\n     * @static \n     * @method\n     * Add vocabularies for one language\n     * @param {String} langurage - Language of the dictionary\n     * @param {Object} vocabularies - Object that has key-value as dictionary entry\n     */\n    static putVocabulariesForLanguage(language, vocabularies) {\n        I18n.checkConfig();\n\n        return _i18n.putVocabulariesForLanguage(language, vocabularies);\n    }\n    \n    /**\n     * @static\n     * @method\n     * Add vocabularies for one language\n     * @param {Object} vocabularies - Object that has language as key,\n     *                                vocabularies of each language as value\n     */\n    static putVocabularies(vocabularies) {\n        I18n.checkConfig();\n\n        return _i18n.putVocabularies(vocabularies);\n    }\n\n    public static checkConfig() {\n        if (!_i18n) { _i18n = new I18nClass(_config); }\n\n        return true;\n    }\n}\n\nAmplify.register(I18n);\nexport default I18n;\n"]}},"error":null,"hash":"a92015a204402ff4131359a44e155a4c","cacheData":{"env":{}}}