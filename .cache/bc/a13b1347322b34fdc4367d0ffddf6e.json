{"id":"node_modules/@aws-amplify/api/lib/API.js","dependencies":[{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\api\\lib\\API.js.map","includedInParent":true,"mtime":1557861903000},{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\api\\src\\API.ts","includedInParent":true,"mtime":1557861738000},{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\api\\package.json","includedInParent":true,"mtime":1560308010596},{"name":"graphql","loc":{"line":67,"column":24},"parent":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\api\\lib\\API.js","resolved":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\graphql\\module\\index.js"},{"name":"graphql/language/printer","loc":{"line":68,"column":24},"parent":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\api\\lib\\API.js","resolved":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\graphql\\language\\printer.js"},{"name":"graphql/language/parser","loc":{"line":69,"column":23},"parent":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\api\\lib\\API.js","resolved":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\graphql\\language\\parser.js"},{"name":"zen-observable","loc":{"line":70,"column":25},"parent":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\api\\lib\\API.js","resolved":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\zen-observable\\index.js"},{"name":"./RestClient","loc":{"line":71,"column":27},"parent":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\api\\lib\\API.js","resolved":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\api\\lib\\RestClient.js"},{"name":"@aws-amplify/core","loc":{"line":72,"column":21},"parent":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\api\\lib\\API.js","resolved":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\core\\lib\\index.js"},{"name":"@aws-amplify/auth","loc":{"line":73,"column":21},"parent":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\api\\lib\\API.js","resolved":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\auth\\lib\\index.js"},{"name":"@aws-amplify/cache","loc":{"line":74,"column":22},"parent":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\api\\lib\\API.js","resolved":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\cache\\lib\\index.js"},{"name":"@aws-amplify/core/lib/constants","loc":{"line":75,"column":26},"parent":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\api\\lib\\API.js","resolved":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\core\\lib\\constants.js"},{"name":"uuid","loc":{"line":76,"column":21},"parent":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\api\\lib\\API.js","resolved":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\uuid\\index.js"}],"generated":{"js":"\"use strict\";\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar graphql_1 = require(\"graphql\");\nvar printer_1 = require(\"graphql/language/printer\");\nvar parser_1 = require(\"graphql/language/parser\");\nvar Observable = require(\"zen-observable\");\nvar RestClient_1 = require(\"./RestClient\");\nvar core_1 = require(\"@aws-amplify/core\");\nvar auth_1 = require(\"@aws-amplify/auth\");\nvar cache_1 = require(\"@aws-amplify/cache\");\nvar constants_1 = require(\"@aws-amplify/core/lib/constants\");\nvar uuid_1 = require(\"uuid\");\nvar logger = new core_1.ConsoleLogger('API');\nexports.graphqlOperation = function (query, variables) {\n    if (variables === void 0) { variables = {}; }\n    return ({ query: query, variables: variables });\n};\n/**\n * Export Cloud Logic APIs\n */\nvar APIClass = /** @class */ (function () {\n    /**\n     * Initialize Storage with AWS configuration\n     * @param {Object} options - Configuration object for storage\n     */\n    function APIClass(options) {\n        this._api = null;\n        this._pubSub = core_1.default.PubSub;\n        this.clientIdentifier = uuid_1.v4();\n        this._options = options;\n        logger.debug('API Options', this._options);\n    }\n    APIClass.prototype.getModuleName = function () {\n        return 'API';\n    };\n    /**\n     * Configure API part with aws configurations\n     * @param {Object} config - Configuration of the API\n     * @return {Object} - The current configuration\n     */\n    APIClass.prototype.configure = function (options) {\n        var _a = options || {}, _b = _a.API, API = _b === void 0 ? {} : _b, otherOptions = __rest(_a, [\"API\"]);\n        var opt = __assign({}, otherOptions, API);\n        logger.debug('configure API', { opt: opt });\n        if (opt['aws_project_region']) {\n            if (opt['aws_cloud_logic_custom']) {\n                var custom = opt['aws_cloud_logic_custom'];\n                opt.endpoints = (typeof custom === 'string') ? JSON.parse(custom)\n                    : custom;\n            }\n            opt = Object.assign({}, opt, {\n                region: opt['aws_project_region'],\n                header: {},\n            });\n        }\n        if (!Array.isArray(opt.endpoints)) {\n            opt.endpoints = [];\n        }\n        // Check if endpoints has custom_headers and validate if is a function\n        opt.endpoints.forEach(function (endpoint) {\n            if (typeof endpoint.custom_header !== 'undefined' && typeof endpoint.custom_header !== 'function') {\n                logger.warn('API ' + endpoint.name + ', custom_header should be a function');\n                endpoint.custom_header = undefined;\n            }\n        });\n        if (typeof opt.graphql_headers !== 'undefined' && typeof opt.graphql_headers !== 'function') {\n            logger.warn('graphql_headers should be a function');\n            opt.graphql_headers = undefined;\n        }\n        this._options = Object.assign({}, this._options, opt);\n        this.createInstance();\n        return this._options;\n    };\n    /**\n     * Create an instance of API for the library\n     * @return - A promise of true if Success\n     */\n    APIClass.prototype.createInstance = function () {\n        logger.debug('create API instance');\n        if (this._options) {\n            this._api = new RestClient_1.RestClient(this._options);\n            return true;\n        }\n        else {\n            return Promise.reject('API not configured');\n        }\n    };\n    /**\n     * Make a GET request\n     * @param {string} apiName  - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    APIClass.prototype.get = function (apiName, path, init) {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_1, endpoint;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!!this._api) return [3 /*break*/, 4];\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.createInstance()];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        error_1 = _a.sent();\n                        return [2 /*return*/, Promise.reject(error_1)];\n                    case 4:\n                        endpoint = this._api.endpoint(apiName);\n                        if (endpoint.length === 0) {\n                            return [2 /*return*/, Promise.reject('API ' + apiName + ' does not exist')];\n                        }\n                        return [2 /*return*/, this._api.get(endpoint + path, init)];\n                }\n            });\n        });\n    };\n    /**\n     * Make a POST request\n     * @param {string} apiName  - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    APIClass.prototype.post = function (apiName, path, init) {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_2, endpoint;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!!this._api) return [3 /*break*/, 4];\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.createInstance()];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        error_2 = _a.sent();\n                        return [2 /*return*/, Promise.reject(error_2)];\n                    case 4:\n                        endpoint = this._api.endpoint(apiName);\n                        if (endpoint.length === 0) {\n                            return [2 /*return*/, Promise.reject('API ' + apiName + ' does not exist')];\n                        }\n                        return [2 /*return*/, this._api.post(endpoint + path, init)];\n                }\n            });\n        });\n    };\n    /**\n     * Make a PUT request\n     * @param {string} apiName  - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    APIClass.prototype.put = function (apiName, path, init) {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_3, endpoint;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!!this._api) return [3 /*break*/, 4];\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.createInstance()];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        error_3 = _a.sent();\n                        return [2 /*return*/, Promise.reject(error_3)];\n                    case 4:\n                        endpoint = this._api.endpoint(apiName);\n                        if (endpoint.length === 0) {\n                            return [2 /*return*/, Promise.reject('API ' + apiName + ' does not exist')];\n                        }\n                        return [2 /*return*/, this._api.put(endpoint + path, init)];\n                }\n            });\n        });\n    };\n    /**\n     * Make a PATCH request\n     * @param {string} apiName  - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    APIClass.prototype.patch = function (apiName, path, init) {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_4, endpoint;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!!this._api) return [3 /*break*/, 4];\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.createInstance()];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        error_4 = _a.sent();\n                        return [2 /*return*/, Promise.reject(error_4)];\n                    case 4:\n                        endpoint = this._api.endpoint(apiName);\n                        if (endpoint.length === 0) {\n                            return [2 /*return*/, Promise.reject('API ' + apiName + ' does not exist')];\n                        }\n                        return [2 /*return*/, this._api.patch(endpoint + path, init)];\n                }\n            });\n        });\n    };\n    /**\n     * Make a DEL request\n     * @param {string} apiName  - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    APIClass.prototype.del = function (apiName, path, init) {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_5, endpoint;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!!this._api) return [3 /*break*/, 4];\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.createInstance()];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        error_5 = _a.sent();\n                        return [2 /*return*/, Promise.reject(error_5)];\n                    case 4:\n                        endpoint = this._api.endpoint(apiName);\n                        if (endpoint.length === 0) {\n                            return [2 /*return*/, Promise.reject('API ' + apiName + ' does not exist')];\n                        }\n                        return [2 /*return*/, this._api.del(endpoint + path, init)];\n                }\n            });\n        });\n    };\n    /**\n     * Make a HEAD request\n     * @param {string} apiName  - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    APIClass.prototype.head = function (apiName, path, init) {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_6, endpoint;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!!this._api) return [3 /*break*/, 4];\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.createInstance()];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        error_6 = _a.sent();\n                        return [2 /*return*/, Promise.reject(error_6)];\n                    case 4:\n                        endpoint = this._api.endpoint(apiName);\n                        if (endpoint.length === 0) {\n                            return [2 /*return*/, Promise.reject('API ' + apiName + ' does not exist')];\n                        }\n                        return [2 /*return*/, this._api.head(endpoint + path, init)];\n                }\n            });\n        });\n    };\n    /**\n    * Getting endpoint for API\n    * @param {string} apiName - The name of the api\n    * @return {string} - The endpoint of the api\n    */\n    APIClass.prototype.endpoint = function (apiName) {\n        return __awaiter(this, void 0, void 0, function () {\n            var error_7;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!!this._api) return [3 /*break*/, 4];\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, this.createInstance()];\n                    case 2:\n                        _a.sent();\n                        return [3 /*break*/, 4];\n                    case 3:\n                        error_7 = _a.sent();\n                        return [2 /*return*/, Promise.reject(error_7)];\n                    case 4: return [2 /*return*/, this._api.endpoint(apiName)];\n                }\n            });\n        });\n    };\n    APIClass.prototype._headerBasedAuth = function (defaultAuthenticationType) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, aws_appsync_authenticationType, apiKey, authenticationType, headers, _b, credentialsOK, federatedInfo, session;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = this._options, aws_appsync_authenticationType = _a.aws_appsync_authenticationType, apiKey = _a.aws_appsync_apiKey;\n                        authenticationType = defaultAuthenticationType || aws_appsync_authenticationType || \"AWS_IAM\";\n                        headers = {};\n                        _b = authenticationType;\n                        switch (_b) {\n                            case 'API_KEY': return [3 /*break*/, 1];\n                            case 'AWS_IAM': return [3 /*break*/, 2];\n                            case 'OPENID_CONNECT': return [3 /*break*/, 4];\n                            case 'AMAZON_COGNITO_USER_POOLS': return [3 /*break*/, 6];\n                        }\n                        return [3 /*break*/, 8];\n                    case 1:\n                        if (!apiKey) {\n                            throw new Error('No api-key configured');\n                        }\n                        headers = {\n                            Authorization: null,\n                            'X-Api-Key': apiKey\n                        };\n                        return [3 /*break*/, 9];\n                    case 2: return [4 /*yield*/, this._ensureCredentials()];\n                    case 3:\n                        credentialsOK = _c.sent();\n                        if (!credentialsOK) {\n                            throw new Error('No credentials');\n                        }\n                        return [3 /*break*/, 9];\n                    case 4: return [4 /*yield*/, cache_1.default.getItem('federatedInfo')];\n                    case 5:\n                        federatedInfo = _c.sent();\n                        if (!federatedInfo || !federatedInfo.token) {\n                            throw new Error('No federated jwt');\n                        }\n                        headers = {\n                            Authorization: federatedInfo.token\n                        };\n                        return [3 /*break*/, 9];\n                    case 6: return [4 /*yield*/, auth_1.default.currentSession()];\n                    case 7:\n                        session = _c.sent();\n                        headers = {\n                            Authorization: session.getAccessToken().getJwtToken()\n                        };\n                        return [3 /*break*/, 9];\n                    case 8:\n                        headers = {\n                            Authorization: null,\n                        };\n                        return [3 /*break*/, 9];\n                    case 9: return [2 /*return*/, headers];\n                }\n            });\n        });\n    };\n    /**\n     * to get the operation type\n     * @param operation\n     */\n    APIClass.prototype.getGraphqlOperationType = function (operation) {\n        var doc = parser_1.parse(operation);\n        var operationType = doc.definitions[0].operation;\n        return operationType;\n    };\n    /**\n     * Executes a GraphQL operation\n     *\n     * @param {GraphQLOptions} GraphQL Options\n     * @returns {Promise<GraphQLResult> | Observable<object>}\n     */\n    APIClass.prototype.graphql = function (_a) {\n        var paramQuery = _a.query, _b = _a.variables, variables = _b === void 0 ? {} : _b, authMode = _a.authMode;\n        var query = typeof paramQuery === 'string' ? parser_1.parse(paramQuery) : parser_1.parse(printer_1.print(paramQuery));\n        var _c = query.definitions.filter(function (def) { return def.kind === 'OperationDefinition'; })[0], operationDef = _c === void 0 ? {} : _c;\n        var operationType = operationDef.operation;\n        switch (operationType) {\n            case 'query':\n            case 'mutation':\n                return this._graphql({ query: query, variables: variables, authMode: authMode });\n            case 'subscription':\n                return this._graphqlSubscribe({ query: query, variables: variables, authMode: authMode });\n        }\n        throw new Error(\"invalid operation type: \" + operationType);\n    };\n    APIClass.prototype._graphql = function (_a, additionalHeaders) {\n        var query = _a.query, variables = _a.variables, authMode = _a.authMode;\n        if (additionalHeaders === void 0) { additionalHeaders = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _b, region, appSyncGraphqlEndpoint, _c, graphql_headers, customGraphqlEndpoint, customEndpointRegion, headers, _d, _e, _f, _g, body, init, endpoint, error, response, err_1, errors;\n            return __generator(this, function (_h) {\n                switch (_h.label) {\n                    case 0:\n                        if (!!this._api) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.createInstance()];\n                    case 1:\n                        _h.sent();\n                        _h.label = 2;\n                    case 2:\n                        _b = this._options, region = _b.aws_appsync_region, appSyncGraphqlEndpoint = _b.aws_appsync_graphqlEndpoint, _c = _b.graphql_headers, graphql_headers = _c === void 0 ? function () { return ({}); } : _c, customGraphqlEndpoint = _b.graphql_endpoint, customEndpointRegion = _b.graphql_endpoint_iam_region;\n                        _d = [{}];\n                        _e = !customGraphqlEndpoint;\n                        if (!_e) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this._headerBasedAuth(authMode)];\n                    case 3:\n                        _e = (_h.sent());\n                        _h.label = 4;\n                    case 4:\n                        _d = _d.concat([(_e)]);\n                        _f = customGraphqlEndpoint;\n                        if (!_f) return [3 /*break*/, 8];\n                        if (!customEndpointRegion) return [3 /*break*/, 6];\n                        return [4 /*yield*/, this._headerBasedAuth(authMode)];\n                    case 5:\n                        _g = _h.sent();\n                        return [3 /*break*/, 7];\n                    case 6:\n                        _g = { Authorization: null };\n                        _h.label = 7;\n                    case 7:\n                        _f = (_g);\n                        _h.label = 8;\n                    case 8:\n                        _d = _d.concat([(_f),\n                            additionalHeaders]);\n                        return [4 /*yield*/, graphql_headers({ query: query, variables: variables })];\n                    case 9:\n                        headers = __assign.apply(void 0, _d.concat([_h.sent()]));\n                        body = {\n                            query: printer_1.print(query),\n                            variables: variables,\n                        };\n                        init = {\n                            headers: headers,\n                            body: body,\n                            signerServiceInfo: {\n                                service: !customGraphqlEndpoint ? 'appsync' : 'execute-api',\n                                region: !customGraphqlEndpoint ? region : customEndpointRegion\n                            }\n                        };\n                        endpoint = customGraphqlEndpoint || appSyncGraphqlEndpoint;\n                        if (!endpoint) {\n                            error = new graphql_1.GraphQLError('No graphql endpoint provided.');\n                            throw {\n                                data: {},\n                                errors: [error],\n                            };\n                        }\n                        _h.label = 10;\n                    case 10:\n                        _h.trys.push([10, 12, , 13]);\n                        return [4 /*yield*/, this._api.post(endpoint, init)];\n                    case 11:\n                        response = _h.sent();\n                        return [3 /*break*/, 13];\n                    case 12:\n                        err_1 = _h.sent();\n                        response = {\n                            data: {},\n                            errors: [\n                                new graphql_1.GraphQLError(err_1.message)\n                            ]\n                        };\n                        return [3 /*break*/, 13];\n                    case 13:\n                        errors = response.errors;\n                        if (errors && errors.length) {\n                            throw response;\n                        }\n                        return [2 /*return*/, response];\n                }\n            });\n        });\n    };\n    APIClass.prototype._graphqlSubscribe = function (_a) {\n        var _this = this;\n        var query = _a.query, variables = _a.variables, authMode = _a.authMode;\n        if (core_1.default.PubSub && typeof core_1.default.PubSub.subscribe === 'function') {\n            return new Observable(function (observer) {\n                var handle = null;\n                (function () { return __awaiter(_this, void 0, void 0, function () {\n                    var aws_appsync_authenticationType, authenticationType, additionalheaders, subscription, newSubscriptions_1, newTopics, observable, error_8;\n                    return __generator(this, function (_a) {\n                        switch (_a.label) {\n                            case 0:\n                                aws_appsync_authenticationType = this._options.aws_appsync_authenticationType;\n                                authenticationType = authMode || aws_appsync_authenticationType;\n                                additionalheaders = __assign({}, (authenticationType === 'API_KEY' ? {\n                                    'x-amz-subscriber-id': this.clientIdentifier\n                                } : {}));\n                                _a.label = 1;\n                            case 1:\n                                _a.trys.push([1, 3, , 4]);\n                                return [4 /*yield*/, this._graphql({ query: query, variables: variables, authMode: authMode }, additionalheaders)];\n                            case 2:\n                                subscription = (_a.sent()).extensions.subscription;\n                                newSubscriptions_1 = subscription.newSubscriptions;\n                                newTopics = Object.getOwnPropertyNames(newSubscriptions_1).map(function (p) { return newSubscriptions_1[p].topic; });\n                                observable = core_1.default.PubSub.subscribe(newTopics, __assign({}, subscription, { provider: constants_1.INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER }));\n                                handle = observable.subscribe({\n                                    next: function (data) { return observer.next(data); },\n                                    complete: function () { return observer.complete(); },\n                                    error: function (data) {\n                                        var error = __assign({}, data);\n                                        if (!error.errors) {\n                                            error.errors = [__assign({}, new graphql_1.GraphQLError('Network Error'))];\n                                        }\n                                        observer.error(error);\n                                    }\n                                });\n                                return [3 /*break*/, 4];\n                            case 3:\n                                error_8 = _a.sent();\n                                observer.error(error_8);\n                                return [3 /*break*/, 4];\n                            case 4: return [2 /*return*/];\n                        }\n                    });\n                }); })();\n                return function () {\n                    if (handle) {\n                        handle.unsubscribe();\n                    }\n                };\n            });\n        }\n        else {\n            logger.debug('No pubsub module applied for subscription');\n            throw new Error('No pubsub module applied for subscription');\n        }\n    };\n    /**\n     * @private\n     */\n    APIClass.prototype._ensureCredentials = function () {\n        return core_1.Credentials.get()\n            .then(function (credentials) {\n            if (!credentials)\n                return false;\n            var cred = core_1.Credentials.shear(credentials);\n            logger.debug('set credentials for api', cred);\n            return true;\n        })\n            .catch(function (err) {\n            logger.warn('ensure credentials error', err);\n            return false;\n        });\n    };\n    return APIClass;\n}());\nexports.default = APIClass;\n"},"sourceMaps":{"js":{"version":3,"file":"API.js","sourceRoot":"","sources":["../src/API.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2017-2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport { OperationDefinitionNode, GraphQLError } from 'graphql';\nimport { print } from 'graphql/language/printer';\nimport { parse } from 'graphql/language/parser';\nimport * as Observable from 'zen-observable';\nimport { RestClient as RestClass } from './RestClient';\nimport Amplify, { ConsoleLogger as Logger, Credentials } from '@aws-amplify/core';\nimport Auth from '@aws-amplify/auth';\nimport { GraphQLOptions, GraphQLResult } from './types';\nimport Cache from '@aws-amplify/cache';\nimport { INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER } from '@aws-amplify/core/lib/constants';\nimport { v4 as uuid } from 'uuid';\n\nconst logger = new Logger('API');\n\nexport const graphqlOperation = (query, variables = {}) => ({ query, variables });\n\n/**\n * Export Cloud Logic APIs\n */\nexport default class APIClass {\n    /**\n     * @private\n     */\n    private _options;\n    private _api = null;\n    private _pubSub = Amplify.PubSub;\n\n    /**\n     * Initialize Storage with AWS configuration\n     * @param {Object} options - Configuration object for storage\n     */\n    constructor(options) {\n        this._options = options;\n        logger.debug('API Options', this._options);\n    }\n\n    public getModuleName() {\n        return 'API';\n    }\n\n    /**\n     * Configure API part with aws configurations\n     * @param {Object} config - Configuration of the API\n     * @return {Object} - The current configuration\n     */\n    configure(options) {\n        const { API = {}, ...otherOptions } = options || {};\n        let opt = { ...otherOptions, ...API };\n        logger.debug('configure API', { opt });\n\n        if (opt['aws_project_region']) {\n            if (opt['aws_cloud_logic_custom']) {\n                const custom = opt['aws_cloud_logic_custom'];\n                opt.endpoints = (typeof custom === 'string') ? JSON.parse(custom)\n                    : custom;\n            }\n\n            opt = Object.assign({}, opt, {\n                region: opt['aws_project_region'],\n                header: {},\n            });\n        }\n\n        if (!Array.isArray(opt.endpoints)) {\n            opt.endpoints = [];\n        }\n\n        // Check if endpoints has custom_headers and validate if is a function\n        opt.endpoints.forEach((endpoint) => {\n            if (typeof endpoint.custom_header !== 'undefined' && typeof endpoint.custom_header !== 'function') {\n                logger.warn('API ' + endpoint.name + ', custom_header should be a function');\n                endpoint.custom_header = undefined;\n            }\n        });\n\n        if (typeof opt.graphql_headers !== 'undefined' && typeof opt.graphql_headers !== 'function') {\n            logger.warn('graphql_headers should be a function');\n            opt.graphql_headers = undefined;\n        }\n\n        this._options = Object.assign({}, this._options, opt);\n\n        this.createInstance();\n\n        return this._options;\n    }\n\n    /**\n     * Create an instance of API for the library\n     * @return - A promise of true if Success\n     */\n    createInstance() {\n        logger.debug('create API instance');\n        if (this._options) {\n            this._api = new RestClass(this._options);\n            return true;\n        } else {\n            return Promise.reject('API not configured');\n        }\n    }\n\n    /**\n     * Make a GET request\n     * @param {string} apiName  - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    async get(apiName, path, init) {\n        if (!this._api) {\n            try {\n                await this.createInstance();\n            } catch (error) {\n                return Promise.reject(error);\n            }\n        }\n\n        const endpoint = this._api.endpoint(apiName);\n        if (endpoint.length === 0) {\n            return Promise.reject('API ' + apiName + ' does not exist');\n        }\n        return this._api.get(endpoint + path, init);\n    }\n\n    /**\n     * Make a POST request\n     * @param {string} apiName  - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    async post(apiName, path, init) {\n        if (!this._api) {\n            try {\n                await this.createInstance();\n            } catch (error) {\n                return Promise.reject(error);\n            }\n        }\n\n        const endpoint = this._api.endpoint(apiName);\n        if (endpoint.length === 0) {\n            return Promise.reject('API ' + apiName + ' does not exist');\n        }\n        return this._api.post(endpoint + path, init);\n    }\n\n    /**\n     * Make a PUT request\n     * @param {string} apiName  - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    async put(apiName, path, init) {\n        if (!this._api) {\n            try {\n                await this.createInstance();\n            } catch (error) {\n                return Promise.reject(error);\n            }\n        }\n\n        const endpoint = this._api.endpoint(apiName);\n        if (endpoint.length === 0) {\n            return Promise.reject('API ' + apiName + ' does not exist');\n        }\n        return this._api.put(endpoint + path, init);\n    }\n\n    /**\n     * Make a PATCH request\n     * @param {string} apiName  - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    async patch(apiName, path, init) {\n        if (!this._api) {\n            try {\n                await this.createInstance();\n            } catch (error) {\n                return Promise.reject(error);\n            }\n        }\n\n        const endpoint = this._api.endpoint(apiName);\n        if (endpoint.length === 0) {\n            return Promise.reject('API ' + apiName + ' does not exist');\n        }\n        return this._api.patch(endpoint + path, init);\n    }\n\n    /**\n     * Make a DEL request\n     * @param {string} apiName  - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    async del(apiName, path, init) {\n        if (!this._api) {\n            try {\n                await this.createInstance();\n            } catch (error) {\n                return Promise.reject(error);\n            }\n        }\n\n        const endpoint = this._api.endpoint(apiName);\n        if (endpoint.length === 0) {\n            return Promise.reject('API ' + apiName + ' does not exist');\n        }\n        return this._api.del(endpoint + path, init);\n    }\n\n    /**\n     * Make a HEAD request\n     * @param {string} apiName  - The api name of the request\n     * @param {string} path - The path of the request\n     * @param {json} [init] - Request extra params\n     * @return {Promise} - A promise that resolves to an object with response status and JSON data, if successful.\n     */\n    async head(apiName, path, init) {\n        if (!this._api) {\n            try {\n                await this.createInstance();\n            } catch (error) {\n                return Promise.reject(error);\n            }\n        }\n\n        const endpoint = this._api.endpoint(apiName);\n        if (endpoint.length === 0) {\n            return Promise.reject('API ' + apiName + ' does not exist');\n        }\n        return this._api.head(endpoint + path, init);\n    }\n\n    /**\n    * Getting endpoint for API\n    * @param {string} apiName - The name of the api\n    * @return {string} - The endpoint of the api\n    */\n    async endpoint(apiName) {\n        if (!this._api) {\n            try {\n                await this.createInstance();\n            } catch (error) {\n                return Promise.reject(error);\n            }\n        }\n        return this._api.endpoint(apiName);\n    }\n\n    private async _headerBasedAuth(defaultAuthenticationType?) {\n        const {\n            aws_appsync_authenticationType,\n            aws_appsync_apiKey: apiKey,\n        } = this._options;\n        const authenticationType = defaultAuthenticationType || aws_appsync_authenticationType || \"AWS_IAM\";\n        let headers = {};\n\n        switch (authenticationType) {\n            case 'API_KEY':\n                if (!apiKey) {\n                    throw new Error('No api-key configured');\n                }\n                headers = {\n                    Authorization: null,\n                    'X-Api-Key': apiKey\n                };\n                break;\n            case 'AWS_IAM':\n                const credentialsOK = await this._ensureCredentials();\n                if (!credentialsOK) { throw new Error('No credentials'); }\n                break;\n            case 'OPENID_CONNECT':\n                const federatedInfo = await Cache.getItem('federatedInfo');\n\n                if (!federatedInfo || !federatedInfo.token) { throw new Error('No federated jwt'); }\n                headers = {\n                    Authorization: federatedInfo.token\n                };\n                break;\n            case 'AMAZON_COGNITO_USER_POOLS':\n                const session = await Auth.currentSession();\n                headers = {\n                    Authorization: session.getAccessToken().getJwtToken()\n                };\n                break;\n            default:\n                headers = {\n                    Authorization: null,\n                };\n                break;\n        }\n\n        return headers;\n    }\n\n    /**\n     * to get the operation type\n     * @param operation \n     */\n    getGraphqlOperationType(operation) {\n        const doc = parse(operation);\n        const { definitions: [{ operation: operationType },] } = doc;\n\n        return operationType;\n    }\n\n    /**\n     * Executes a GraphQL operation\n     *\n     * @param {GraphQLOptions} GraphQL Options\n     * @returns {Promise<GraphQLResult> | Observable<object>}\n     */\n    graphql({ query: paramQuery, variables = {}, authMode }: GraphQLOptions) {\n\n        const query = typeof paramQuery === 'string' ? parse(paramQuery) : parse(print(paramQuery));\n\n        const [operationDef = {},] = query.definitions.filter(def => def.kind === 'OperationDefinition');\n        const { operation: operationType } = operationDef as OperationDefinitionNode;\n\n        switch (operationType) {\n            case 'query':\n            case 'mutation':\n                return this._graphql({ query, variables, authMode });\n            case 'subscription':\n                return this._graphqlSubscribe({ query, variables, authMode });\n        }\n\n        throw new Error(`invalid operation type: ${operationType}`);\n    }\n\n    private async _graphql({ query, variables, authMode }: GraphQLOptions, additionalHeaders = {})\n        : Promise<GraphQLResult> {\n        if (!this._api) {\n            await this.createInstance();\n        }\n\n        const {\n            aws_appsync_region: region,\n            aws_appsync_graphqlEndpoint: appSyncGraphqlEndpoint,\n            graphql_headers = () => ({}),\n            graphql_endpoint: customGraphqlEndpoint,\n            graphql_endpoint_iam_region: customEndpointRegion\n        } = this._options;\n\n        const headers = {\n            ...(!customGraphqlEndpoint && await this._headerBasedAuth(authMode)),\n            ...(customGraphqlEndpoint &&\n                (customEndpointRegion ? await this._headerBasedAuth(authMode) : { Authorization: null })\n            ),\n            ...additionalHeaders,\n            ... await graphql_headers({ query, variables }),\n        };\n\n        const body = {\n            query: print(query),\n            variables,\n        };\n\n        const init = {\n            headers,\n            body,\n            signerServiceInfo: {\n                service: !customGraphqlEndpoint ? 'appsync' : 'execute-api',\n                region: !customGraphqlEndpoint ? region : customEndpointRegion\n            }\n        };\n\n        const endpoint = customGraphqlEndpoint || appSyncGraphqlEndpoint;\n\n        if (!endpoint) {\n            const error = new GraphQLError('No graphql endpoint provided.');\n\n            throw {\n                data: {},\n                errors: [error],\n            };\n        }\n\n        let response;\n        try {\n            response = await this._api.post(endpoint, init);\n        } catch (err) {\n            response = {\n                data: {},\n                errors: [\n                    new GraphQLError(err.message)\n                ]\n            };\n        }\n\n        const { errors } = response;\n\n        if (errors && errors.length) {\n            throw response;\n        }\n\n        return response;\n    }\n\n    private clientIdentifier = uuid();\n\n    private _graphqlSubscribe({ query, variables, authMode }: GraphQLOptions): Observable<object> {\n        if (Amplify.PubSub && typeof Amplify.PubSub.subscribe === 'function') {\n            return new Observable(observer => {\n\n                let handle = null;\n\n                (async () => {\n                    const {\n                        aws_appsync_authenticationType,\n                    } = this._options;\n                    const authenticationType = authMode || aws_appsync_authenticationType;\n                    const additionalheaders = {\n                        ...(authenticationType === 'API_KEY' ? {\n                            'x-amz-subscriber-id': this.clientIdentifier\n                        } : {})\n                    };\n\n                    try {\n                        const {\n                            extensions: { subscription },\n\n                        } = await this._graphql({ query, variables, authMode }, additionalheaders);\n\n                        const { newSubscriptions } = subscription;\n\n                        const newTopics =\n                            Object.getOwnPropertyNames(newSubscriptions).map(p => newSubscriptions[p].topic);\n\n                        const observable = Amplify.PubSub.subscribe(newTopics, {\n                            ...subscription,\n                            provider: INTERNAL_AWS_APPSYNC_PUBSUB_PROVIDER,\n                        });\n\n                        handle = observable.subscribe({\n                            next: (data) => observer.next(data),\n                            complete: () => observer.complete(),\n                            error: (data) => {\n                                const error = { ...data };\n                                if (!error.errors) {\n                                    error.errors = [{\n                                        ...new GraphQLError('Network Error')\n                                    }];\n                                }\n                                observer.error(error);\n                            }\n                        });\n\n                    } catch (error) {\n                        observer.error(error);\n                    }\n                })();\n\n                return () => {\n                    if (handle) {\n                        handle.unsubscribe();\n                    }\n                };\n            });\n        } else {\n            logger.debug('No pubsub module applied for subscription');\n            throw new Error('No pubsub module applied for subscription');\n        }\n    }\n\n    /**\n     * @private\n     */\n    _ensureCredentials() {\n        return Credentials.get()\n            .then(credentials => {\n                if (!credentials) return false;\n                const cred = Credentials.shear(credentials);\n                logger.debug('set credentials for api', cred);\n\n                return true;\n            })\n            .catch(err => {\n                logger.warn('ensure credentials error', err);\n                return false;\n            });\n    }\n}\n"]}},"error":null,"hash":"82c45aeab894d413736f975b302aeddb","cacheData":{"env":{}}}