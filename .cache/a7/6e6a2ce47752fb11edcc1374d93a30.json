{"id":"node_modules/@aws-amplify/pubsub/lib/Providers/MqttOverWSProvider.js","dependencies":[{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\pubsub\\lib\\Providers\\MqttOverWSProvider.js.map","includedInParent":true,"mtime":1557861850000},{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\pubsub\\src\\Providers\\MqttOverWSProvider.ts","includedInParent":true,"mtime":1557861739000},{"name":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\pubsub\\package.json","includedInParent":true,"mtime":1560308010595},{"name":"../vendor/paho-mqtt","loc":{"line":77,"column":19},"parent":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\pubsub\\lib\\Providers\\MqttOverWSProvider.js","resolved":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\pubsub\\lib\\vendor\\paho-mqtt.js"},{"name":"uuid","loc":{"line":78,"column":21},"parent":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\pubsub\\lib\\Providers\\MqttOverWSProvider.js","resolved":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\uuid\\index.js"},{"name":"zen-observable","loc":{"line":79,"column":25},"parent":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\pubsub\\lib\\Providers\\MqttOverWSProvider.js","resolved":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\zen-observable\\index.js"},{"name":"./PubSubProvider","loc":{"line":80,"column":31},"parent":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\pubsub\\lib\\Providers\\MqttOverWSProvider.js","resolved":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\pubsub\\lib\\Providers\\PubSubProvider.js"},{"name":"@aws-amplify/core","loc":{"line":81,"column":21},"parent":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\pubsub\\lib\\Providers\\MqttOverWSProvider.js","resolved":"C:\\Users\\太田遥人\\Desktop\\auth-kampo\\node_modules\\@aws-amplify\\core\\lib\\index.js"}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nvar Paho = require(\"../vendor/paho-mqtt\");\nvar uuid_1 = require(\"uuid\");\nvar Observable = require(\"zen-observable\");\nvar PubSubProvider_1 = require(\"./PubSubProvider\");\nvar core_1 = require(\"@aws-amplify/core\");\nvar logger = new core_1.ConsoleLogger('MqttOverWSProvider');\nfunction mqttTopicMatch(filter, topic) {\n    var filterArray = filter.split('/');\n    var length = filterArray.length;\n    var topicArray = topic.split('/');\n    for (var i = 0; i < length; ++i) {\n        var left = filterArray[i];\n        var right = topicArray[i];\n        if (left === '#')\n            return topicArray.length >= length;\n        if (left !== '+' && left !== right)\n            return false;\n    }\n    return length === topicArray.length;\n}\nexports.mqttTopicMatch = mqttTopicMatch;\nvar ClientsQueue = /** @class */ (function () {\n    function ClientsQueue() {\n        this.promises = new Map();\n    }\n    ClientsQueue.prototype.get = function (clientId, clientFactory) {\n        return __awaiter(this, void 0, void 0, function () {\n            var promise;\n            return __generator(this, function (_a) {\n                promise = this.promises.get(clientId);\n                if (promise) {\n                    return [2 /*return*/, promise];\n                }\n                promise = clientFactory(clientId);\n                this.promises.set(clientId, promise);\n                return [2 /*return*/, promise];\n            });\n        });\n    };\n    Object.defineProperty(ClientsQueue.prototype, \"allClients\", {\n        get: function () { return Array.from(this.promises.keys()); },\n        enumerable: true,\n        configurable: true\n    });\n    ClientsQueue.prototype.remove = function (clientId) {\n        this.promises.delete(clientId);\n    };\n    return ClientsQueue;\n}());\nvar topicSymbol = typeof Symbol !== 'undefined' ? Symbol('topic') : '@@topic';\nvar MqttOverWSProvider = /** @class */ (function (_super) {\n    __extends(MqttOverWSProvider, _super);\n    function MqttOverWSProvider(options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this, __assign({}, options, { clientId: options.clientId || uuid_1.v4() })) || this;\n        _this._clientsQueue = new ClientsQueue();\n        _this._topicObservers = new Map();\n        return _this;\n    }\n    Object.defineProperty(MqttOverWSProvider.prototype, \"clientId\", {\n        get: function () { return this.options.clientId; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MqttOverWSProvider.prototype, \"endpoint\", {\n        get: function () { return this.options.aws_pubsub_endpoint; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(MqttOverWSProvider.prototype, \"clientsQueue\", {\n        get: function () { return this._clientsQueue; },\n        enumerable: true,\n        configurable: true\n    });\n    MqttOverWSProvider.prototype.getTopicForValue = function (value) { return typeof value === 'object' && value[topicSymbol]; };\n    MqttOverWSProvider.prototype.getProviderName = function () { return 'MqttOverWSProvider'; };\n    MqttOverWSProvider.prototype.onDisconnect = function (_a) {\n        var clientId = _a.clientId, errorCode = _a.errorCode, args = __rest(_a, [\"clientId\", \"errorCode\"]);\n        if (errorCode !== 0) {\n            logger.warn(clientId, JSON.stringify(__assign({ errorCode: errorCode }, args), null, 2));\n        }\n    };\n    MqttOverWSProvider.prototype.newClient = function (_a) {\n        var url = _a.url, clientId = _a.clientId;\n        return __awaiter(this, void 0, void 0, function () {\n            var client;\n            var _this = this;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        logger.debug('Creating new MQTT client', clientId);\n                        client = new Paho.Client(url, clientId);\n                        // client.trace = (args) => logger.debug(clientId, JSON.stringify(args, null, 2));\n                        client.onMessageArrived = function (_a) {\n                            var topic = _a.destinationName, msg = _a.payloadString;\n                            _this._onMessage(topic, msg);\n                        };\n                        client.onConnectionLost = function (_a) {\n                            var errorCode = _a.errorCode, args = __rest(_a, [\"errorCode\"]);\n                            _this.onDisconnect(__assign({ clientId: clientId, errorCode: errorCode }, args));\n                        };\n                        return [4 /*yield*/, new Promise(function (resolve, reject) {\n                                client.connect({\n                                    useSSL: true,\n                                    mqttVersion: 3,\n                                    onSuccess: function () { return resolve(client); },\n                                    onFailure: reject,\n                                });\n                            })];\n                    case 1:\n                        _b.sent();\n                        return [2 /*return*/, client];\n                }\n            });\n        });\n    };\n    MqttOverWSProvider.prototype.connect = function (clientId, options) {\n        if (options === void 0) { options = {}; }\n        return __awaiter(this, void 0, void 0, function () {\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.clientsQueue.get(clientId, function (clientId) { return _this.newClient(__assign({}, options, { clientId: clientId })); })];\n                    case 1: return [2 /*return*/, _a.sent()];\n                }\n            });\n        });\n    };\n    MqttOverWSProvider.prototype.disconnect = function (clientId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var client;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.clientsQueue.get(clientId, function () { return null; })];\n                    case 1:\n                        client = _a.sent();\n                        if (client && client.isConnected()) {\n                            client.disconnect();\n                        }\n                        this.clientsQueue.remove(clientId);\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MqttOverWSProvider.prototype.publish = function (topics, msg) {\n        return __awaiter(this, void 0, void 0, function () {\n            var targetTopics, message, url, client;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        targetTopics = [].concat(topics);\n                        message = JSON.stringify(msg);\n                        return [4 /*yield*/, this.endpoint];\n                    case 1:\n                        url = _a.sent();\n                        return [4 /*yield*/, this.connect(this.clientId, { url: url })];\n                    case 2:\n                        client = _a.sent();\n                        logger.debug('Publishing to topic(s)', targetTopics.join(','), message);\n                        targetTopics.forEach(function (topic) { return client.send(topic, message); });\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    MqttOverWSProvider.prototype._onMessage = function (topic, msg) {\n        try {\n            var matchedTopicObservers_1 = [];\n            this._topicObservers.forEach(function (observerForTopic, observerTopic) {\n                if (mqttTopicMatch(observerTopic, topic)) {\n                    matchedTopicObservers_1.push(observerForTopic);\n                }\n            });\n            var parsedMessage_1 = JSON.parse(msg);\n            if (typeof parsedMessage_1 === 'object') {\n                parsedMessage_1[topicSymbol] = topic;\n            }\n            matchedTopicObservers_1.forEach(function (observersForTopic) {\n                observersForTopic.forEach(function (observer) { return observer.next(parsedMessage_1); });\n            });\n        }\n        catch (error) {\n            logger.warn('Error handling message', error, msg);\n        }\n    };\n    MqttOverWSProvider.prototype.subscribe = function (topics, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var targetTopics = [].concat(topics);\n        logger.debug('Subscribing to topic(s)', targetTopics.join(','));\n        return new Observable(function (observer) {\n            targetTopics.forEach(function (topic) {\n                var observersForTopic = _this._topicObservers.get(topic);\n                if (!observersForTopic) {\n                    observersForTopic = new Set();\n                    _this._topicObservers.set(topic, observersForTopic);\n                }\n                observersForTopic.add(observer);\n            });\n            var client;\n            var _a = options.clientId, clientId = _a === void 0 ? _this.clientId : _a;\n            (function () { return __awaiter(_this, void 0, void 0, function () {\n                var _a, url, _b;\n                return __generator(this, function (_c) {\n                    switch (_c.label) {\n                        case 0:\n                            _a = options.url;\n                            if (!(_a === void 0)) return [3 /*break*/, 2];\n                            return [4 /*yield*/, this.endpoint];\n                        case 1:\n                            _b = _c.sent();\n                            return [3 /*break*/, 3];\n                        case 2:\n                            _b = _a;\n                            _c.label = 3;\n                        case 3:\n                            url = _b;\n                            return [4 /*yield*/, this.connect(clientId, { url: url })];\n                        case 4:\n                            client = _c.sent();\n                            targetTopics.forEach(function (topic) { client.subscribe(topic); });\n                            return [2 /*return*/];\n                    }\n                });\n            }); })();\n            return function () {\n                logger.debug('Unsubscribing from topic(s)', targetTopics.join(','));\n                if (client) {\n                    targetTopics.forEach(function (topic) {\n                        if (client.isConnected()) {\n                            client.unsubscribe(topic);\n                        }\n                        var observersForTopic = _this._topicObservers.get(topic) ||\n                            new Set();\n                        observersForTopic.forEach(function (observer) { return observer.complete(); });\n                        observersForTopic.clear();\n                    });\n                    _this.disconnect(clientId);\n                }\n                return null;\n            };\n        });\n    };\n    return MqttOverWSProvider;\n}(PubSubProvider_1.AbstractPubSubProvider));\nexports.MqttOverWSProvider = MqttOverWSProvider;\n"},"sourceMaps":{"js":{"version":3,"file":"MqttOverWSProvider.js","sourceRoot":"","sources":["../../src/Providers/MqttOverWSProvider.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\nimport * as Paho from '../vendor/paho-mqtt';\nimport { v4 as uuid } from 'uuid';\nimport * as Observable from 'zen-observable';\n\nimport { AbstractPubSubProvider } from './PubSubProvider';\nimport { ProvidertOptions } from '../types';\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\n\nconst logger = new Logger('MqttOverWSProvider');\n\nexport function mqttTopicMatch(filter: string, topic: string) {\n    const filterArray = filter.split('/');\n    const length = filterArray.length;\n    const topicArray = topic.split('/');\n\n    for (let i = 0; i < length; ++i) {\n        const left = filterArray[i];\n        const right = topicArray[i];\n        if (left === '#') return topicArray.length >= length;\n        if (left !== '+' && left !== right) return false;\n    }\n    return length === topicArray.length;\n}\n\nexport interface MqttProvidertOptions extends ProvidertOptions {\n    clientId?: string,\n    url?: string,\n}\n\nclass ClientsQueue {\n    private promises: Map<string, Promise<any>> = new Map();\n\n    async get(clientId: string, clientFactory: (string) => Promise<any>) {\n        let promise = this.promises.get(clientId);\n        if (promise) {\n            return promise;\n        }\n\n        promise = clientFactory(clientId);\n\n        this.promises.set(clientId, promise);\n\n        return promise;\n    }\n\n    get allClients() { return Array.from(this.promises.keys()); }\n\n    remove(clientId) {\n        this.promises.delete(clientId);\n    }\n}\n\nconst topicSymbol = typeof Symbol !== 'undefined' ? Symbol('topic') : '@@topic';\n\nexport class MqttOverWSProvider extends AbstractPubSubProvider {\n\n    private _clientsQueue = new ClientsQueue();\n\n    constructor(options: MqttProvidertOptions = {}) {\n        super({ ...options, clientId: options.clientId || uuid(), });\n    }\n\n    protected get clientId() { return this.options.clientId; }\n\n    protected get endpoint() { return this.options.aws_pubsub_endpoint; }\n\n    protected get clientsQueue() { return this._clientsQueue; }\n\n    protected getTopicForValue(value) { return typeof value === 'object' && value[topicSymbol]; }\n\n    getProviderName() { return 'MqttOverWSProvider'; }\n\n    public onDisconnect({ clientId, errorCode, ...args }) {\n        if (errorCode !== 0) {\n            logger.warn(clientId, JSON.stringify({ errorCode, ...args }, null, 2));\n        }\n    }\n\n    public async newClient({ url, clientId }: MqttProvidertOptions): Promise<any> {\n        logger.debug('Creating new MQTT client', clientId);\n\n        const client = new Paho.Client(url, clientId);\n        // client.trace = (args) => logger.debug(clientId, JSON.stringify(args, null, 2));\n        client.onMessageArrived = ({ destinationName: topic, payloadString: msg }) => {\n            this._onMessage(topic, msg);\n        };\n        client.onConnectionLost = ({ errorCode, ...args }) => {\n            this.onDisconnect({ clientId, errorCode, ...args });\n        };\n\n        await new Promise((resolve, reject) => {\n            client.connect({\n                useSSL: true,\n                mqttVersion: 3,\n                onSuccess: () => resolve(client),\n                onFailure: reject,\n            });\n        });\n\n        return client;\n    }\n\n    protected async connect(clientId: string, options: MqttProvidertOptions = {}): Promise<any> {\n        return await this.clientsQueue.get(clientId, clientId => this.newClient({ ...options, clientId }));\n    }\n\n    protected async disconnect(clientId: string): Promise<void> {\n        const client = await this.clientsQueue.get(clientId, () => null);\n\n        if (client && client.isConnected()) {\n            client.disconnect();\n        }\n        this.clientsQueue.remove(clientId);\n    }\n\n    async publish(topics: string[] | string, msg: any) {\n        const targetTopics = ([] as string[]).concat(topics);\n        const message = JSON.stringify(msg);\n\n        const url = await this.endpoint;\n\n        const client = await this.connect(this.clientId, { url });\n\n        logger.debug('Publishing to topic(s)', targetTopics.join(','), message);\n        targetTopics.forEach(topic => client.send(topic, message));\n    }\n\n    protected _topicObservers: Map<string, Set<ZenObservable.SubscriptionObserver<any>>> = new Map();\n\n    private _onMessage(topic: string, msg: any) {\n        try {\n            const matchedTopicObservers = [];\n            this._topicObservers.forEach((observerForTopic, observerTopic) => {\n                if (mqttTopicMatch(observerTopic, topic)) {\n                    matchedTopicObservers.push(observerForTopic);\n                }\n            });\n            const parsedMessage = JSON.parse(msg);\n\n            if (typeof parsedMessage === 'object') {\n                parsedMessage[topicSymbol] = topic;\n            }\n\n            matchedTopicObservers.forEach(observersForTopic =>{\n                observersForTopic.forEach(observer => observer.next(parsedMessage));\n            });\n        } catch (error) {\n            logger.warn('Error handling message', error, msg);\n        }\n    }\n\n    subscribe(topics: string[] | string, options: MqttProvidertOptions = {}): Observable<any> {\n        const targetTopics = ([] as string[]).concat(topics);\n        logger.debug('Subscribing to topic(s)', targetTopics.join(','));\n\n        return new Observable(observer => {\n\n            targetTopics.forEach(topic => {\n                let observersForTopic = this._topicObservers.get(topic);\n\n                if (!observersForTopic) {\n                    observersForTopic = new Set();\n\n                    this._topicObservers.set(topic, observersForTopic);\n                }\n\n                observersForTopic.add(observer);\n            });\n\n            let client: Paho.Client;\n            const { clientId = this.clientId } = options;\n\n            (async () => {\n                const {\n                    url = await this.endpoint,\n                } = options;\n\n                client = await this.connect(clientId, { url });\n                targetTopics.forEach(topic => { client.subscribe(topic); });\n            })();\n\n            return () => {\n                logger.debug('Unsubscribing from topic(s)', targetTopics.join(','));\n\n                if (client) {\n                    targetTopics.forEach(topic => {\n                        if (client.isConnected()) {\n                            client.unsubscribe(topic);\n                        }\n\n                        const observersForTopic = this._topicObservers.get(topic) ||\n                            (new Set() as Set<ZenObservable.SubscriptionObserver<any>>);\n\n                        observersForTopic.forEach(observer => observer.complete());\n\n                        observersForTopic.clear();\n                    });\n\n                    this.disconnect(clientId);\n                }\n\n                return null;\n            };\n        });\n    }\n}\n"]}},"error":null,"hash":"85eab6d886103d78ffceed959e116e5d","cacheData":{"env":{}}}